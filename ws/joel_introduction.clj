;; gorilla-repl.fileformat = 1

;; **
;;; # Symbolic regression
;;; 
;;; This worksheet gives a didactic introduction to symbolic regression, an evolutionary technique for finding a function that fits some data. It differs from the more usual regression techniques in that it doesn't just vary the parameters in a fixed function to get the best fit, but varies the form of the function as well. A genetic algorithm approach is used to optimise the form of the function.
;;; 
;;; In this worksheet we'll build a symbolic regression algorithm from the ground up. We'll keep it simple and the resulting code won't be the most efficient or powerful. But hopefully you should be able to understand it end-to-end without investing too much time.
;;; 
;;; The outline stucture of a genetic algorithm is:
;;; 
;;; - first generate some initial, random trial solutions to the problem;
;;; - test those solutions to see how good they are;
;;; - keep the best, breeding and mutating them to make new solutions;
;;; - repeat until a good enough solution is found.
;;; 
;;; The structure of this tutorial will follow the structure of the algorithm: first we'll look at the building blocks of our solutions; then we'll write some code to construct an initial, random population of solutions; we'll write code to score our solutions according to how well they fit our data; we'll implement the genetic algorithm operators of crossover (breeding) and mutation for our potential solutions; and then we'll pull it all together by implementing the genetic algorithm proper.
;;; 
;;; If you want to learn more, I'd suggest Koza's "Genetic Programming" (1992) and Poli's "A Field Guide to Genetic Programming" (2008). This tutorial follows the material in those books closely.
;;; 
;;; Let's get started by importing some basic tools that we need.
;; **

;; @@
(ns sr-basis
  (:require [clojure.repl :as repl]
            [clojure.pprint :as pprint]
            [clojure.walk :as walk]
            [clojure.zip :as zip]
            [gorilla-plot.core :as plot]
            [gorilla-repl.table :as table]
            [gorilla-repl.html :as html]
            [sr-basics.render :as render]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; $$---JOEL---$$
;;; $$\textbf{Require}$$ 
;;; 
;;; Loads 'lib's into project. 
;;; 
;;; $$\textbf{lib}$$  a named set of resources in classpath whose contents define a library of Clojure code. 
;;; 
;;; $$ ------- $$
;; **

;; **
;;; ## Building blocks
;;; 
;;; Symbolic regression works by building functions from a set of basic building blocks. The choice of these building blocks is an important decision when setting up a symbolic regression problem. For the moment we'll keep it simple and include just basic arithmetic operators: add, subtract, multiply and divide.
;;; 
;;; There's a wrinkle that we must take care of now: divide-by-zero. There are number of approaches to this, but one of the simplest (and earliest) is to modify the division operator to side-step the problem. This is often known as a protected division. Let's provide an implementation for the protected division, which will return one if we attempt a divide-by-zero.
;; **

;; @@
(defn pdiv [x y] (if (zero? y) 1 (/ x y)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/pdiv</span>","value":"#'sr-basis/pdiv"}
;; <=

;; **
;;; The functions we'll use are given as a list of maps. Each map gives the name of the function and its _arity_ - the number of arguments it takes. We'll need the arity in order to construct syntactically valid expressions. Here we will make the simplification that each operator has fixed arity.
;;; 
;; **

;; @@
(def functions
  [{:name '+ :arity 2}
   {:name '- :arity 2}
   {:name '* :arity 2}
   {:name 'pdiv :arity 2}])
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/functions</span>","value":"#'sr-basis/functions"}
;; <=

;; **
;;; We also need something for the functions to operate on. These will be either numerical constants, or variables. We'll call these terminals for, as we'll see shortly, they'll be the terminal nodes of the expression tree we generate.
;;; 
;;; We define the terminals as constructor functions that when evaluated return the value of the terminal. This allows us to simply implement the idea of a random constant. For the moment we will use two terminals, a random constant between 0 and 1, and the variable `x`.
;; **

;; @@
(def terminals
  [(constantly 'x)
   rand])
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/terminals</span>","value":"#'sr-basis/terminals"}
;; <=

;; **
;;; $$---JOEL---$$
;;; $$\textbf{constantly}$$ -  Returns a function that takes any number of arguments and returns x. 
;;; 
;;; $$\textbf{rand}$$ - Returns a random floating point number between 0 (inclusive) and
;;; n (default 1) (exclusive).
;;; 
;;; $$-------$$
;; **

;; **
;;; ## Generating an initial population
;;; 
;;; Our solutions will be represented as trees, in the usual LISP s-expr way. To generate an initial, random population of trees we'll start with a function to generate a random tree of a given depth. This function generates a particular kind of tree, one where all of the terminal nodes are at the maximum depth. There are other ways you can think of to generate random trees, but this one will suffice for now.
;;; 
;;; We use a simple recursive implementation.
;; **

;; @@
(defn random-full-tree
  [functions terminals depth]
  (if (= depth 0)
    ;; note that the elements of terminals are _functions_ that generate the terminal, hence the
    ;; double brackets on the line below
    ((rand-nth terminals))
    (let [func (rand-nth functions)
          leaves (repeatedly (:arity func) #(random-full-tree functions terminals (- depth 1)))]
      (conj leaves (:name func)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/random-full-tree</span>","value":"#'sr-basis/random-full-tree"}
;; <=

;; **
;;; This generates fairly opaque s-exprs.
;; **

;; **
;;; $$---Joel---$$
;;; $$\textbf{rand-nth}$$ - Return a random element of the (sequential) collection. Will have
;;; the same performance characteristics as nth for the given
;;; collection.
;;; 
;;; $$\textbf{let}$$ - 
;;; (let [bindings*] exprs*)
;;; 
;;; binding => binding-form init-expr Evaluates the exprs in a lexical context in which the symbols in
;;; the binding-forms are bound to their respective init-exprs or parts therein.
;;; 
;;; Binding for the symbol won't exist outside of the let expression.
;;; 
;;; $$\textbf{repeatedly}$$ -  (repeatedly f)(repeatedly n f)
;;; 
;;; Takes a function of no args, presumably with side effects, and returns an infinite (or length n if supplied) lazy sequence of calls to it
;;; 
;;; $$\textbf{conj}$$ - (conj coll x)(conj coll x & xs) 
;;; 
;;; conj[oin]. Returns a new collection with the xs  'added'.
;;; $$-----$$
;; **

;; @@
(random-full-tree functions terminals 3)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>pdiv</span>","value":"pdiv"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>pdiv</span>","value":"pdiv"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"},{"type":"html","content":"<span class='clj-double'>0.866455218277202</span>","value":"0.866455218277202"}],"value":"(pdiv x 0.866455218277202)"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>pdiv</span>","value":"pdiv"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"}],"value":"(pdiv x x)"}],"value":"(+ (pdiv x 0.866455218277202) (pdiv x x))"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"}],"value":"(- x x)"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-double'>0.3739678358397761</span>","value":"0.3739678358397761"},{"type":"html","content":"<span class='clj-double'>0.8466124439685477</span>","value":"0.8466124439685477"}],"value":"(+ 0.3739678358397761 0.8466124439685477)"}],"value":"(+ (- x x) (+ 0.3739678358397761 0.8466124439685477))"}],"value":"(pdiv (+ (pdiv x 0.866455218277202) (pdiv x x)) (+ (- x x) (+ 0.3739678358397761 0.8466124439685477)))"}
;; <=

;; **
;;; Math expression: (* (* (pdiv x x) (+ 0.7282065646141483 x)) (+ (+ 0.636064950654536 0.09074558339992478) (pdiv 0.17614464556689846 x)))
;; **

;; @@
(random-full-tree functions terminals 2)
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>pdiv</span>","value":"pdiv"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"},{"type":"html","content":"<span class='clj-double'>0.5691887964326817</span>","value":"0.5691887964326817"}],"value":"(pdiv x 0.5691887964326817)"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>-</span>","value":"-"},{"type":"html","content":"<span class='clj-double'>0.26860563031215656</span>","value":"0.26860563031215656"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"}],"value":"(- 0.26860563031215656 x)"}],"value":"(- (pdiv x 0.5691887964326817) (- 0.26860563031215656 x))"}
;; <=

;; **
;;; Let's try and get a better look at the sort of expressions that are generated. First we define a helper function to transform a symbolic expression into a function that we can call to get its value. Many thanks to Lee Spector for an elegant implementation of this function.
;; **

;; @@
(defn functionalise [ex] (eval (list 'fn '[x] ex)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/functionalise</span>","value":"#'sr-basis/functionalise"}
;; <=

;; **
;;; $$---Joel---$$
;;; 
;;; $$\textbf{eval}$$
;;; (eval form)
;;; 
;;; Evaluates the form data structure (not text!) and returns the result.
;;; 
;;; $$----$$
;; **

;; **
;;; In the accompanying project to this worksheet I've defined a function `mathematician-view` which formats the expression in a more traditional format. Let's look at a sampling of random expressions and their graphs.
;; **

;; @@
(let [exprs (repeatedly 5 #(random-full-tree functions terminals 3))]
  (table-view
   (map (fn [ex] [(functionalise ex) 
                  (plot (functionalise ex) [0 10] :plot-size 200)])
        exprs)
   :columns [(html-view "Expression") (html-view "Plot")]))
;; @@

;; @@
(let [exprs (repeatedly 5 #(random-full-tree functions terminals 3))]
  (table-view
   (map (fn [ex] [(mathematician-view ex) 
                  (plot (functionalise ex) [0 10] :plot-size 200)])
        exprs)
   :columns [(html-view "Expression") (html-view "Plot")]))

;; @@

;; **
;;; $$\text{Cannot evaluate the above expression boxes as I believe jony changed something around with the code.}$$
;; **

;; **
;;; That looks promising. We are now in a position to implement a function to generate the initial population. We'll include a range of tree sizes for variety.
;; **

;; @@
(defn make-initial-population
  [n max-depth]
  (repeatedly n #(random-full-tree functions terminals (+ 1 (rand-int (- max-depth 1))))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;user/make-initial-population</span>","value":"#'user/make-initial-population"}
;; <=

;; **
;;; ## Scoring the solutions
;; **

;; **
;;; We'll use a modified @@\chi^2@@ type score to indicate how well each proposed solution fits. Rather than squaring the residuals, as in a @@\chi^2@@ score, we'll use the absolute values:
;;; 
;;; $$ S(f) = - \sum_{i} |f(x_i) - y_i| $$
;;; 
;;; where @@i@@ runs over the data points, @@f@@ is the function under test and @@(x_i, y_i)@@ is the @@i@@th data point. Notice that we've made the score negative, so the maximum score is the best. This form of the scoring function is commonly used, and less aggressive for functions that are way off the mark. I've never tested whether it really makes any difference to the convergence of the genetic algorithm search though.
;; **

;; **
;;; $$---Joel---$$
;;; $$\text{doall}$$
;;; (doall coll) (doall n coll)
;;; 
;;; coll = collection
;;; 
;;; - When lazy sequences are produced via functions that have side effects, any effects other than those needed to produce the first element in the seq do not occur until the seq is consumed. doall can be used to force any effects.
;;; $$----$$
;; **

;; **
;;; So that we have something concrete to play with, let's make up a target dataset. We'll start with something simple, a polynomial.
;; **

;; @@
(def data (doall (map (fn [x] [x (+ (* 3 x) (* 2 x x))]) (range 0 10 0.5))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/data</span>","value":"#'sr-basis/data"}
;; <=

;; @@
(plot/list-plot data)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5","field":"data.y"}}],"marks":[{"type":"symbol","from":{"data":"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}}],"data":[{"name":"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5\", :field \"data.y\"}}], :marks [{:type \"symbol\", :from {:data \"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}}], :data [{:name \"45fcf69b-a1ae-4f39-a4ce-0f67ef5480e5\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; **
;;; $$---Joel---$$
;;; 
;;; $$
;;; \textbf{plot/list-plot}
;;; $$
;;; 
;;; 
;;; 
;; **

;; **
;;; The score function itself is easy to implement.
;; **

;; @@
(defn score
  [data ex]
  (let [f (functionalise ex)]
    (* -1 (apply + (map #(Math/abs (- (f (first %)) (second %))) data)))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/score</span>","value":"#'sr-basis/score"}
;; <=

;; **
;;; $$---Joel---$$
;;; $$\textbf{apply}$$
;;; (apply f args)   
;;; (apply f x args)   
;;; (apply f x y args)   
;;; (apply f x y z args)  
;;; (apply f a b c d & args)
;;; 
;;; Applies fn f to the argument list formed by prepending intervening arguments to args.
;;; 
;;; $$\textbf{rest}$$
;;; 
;;; (rest coll) 
;;; 
;;; Returns a possibly empty seq of the items after the first. Calls seq on its argument.
;;; 
;;; $$----$$
;; **

;; **
;;; Let's check this makes sense by looking at a few random functions and their scores.
;; **

;; @@
(table/table-view
 (repeatedly 4 #(let [ex (random-full-tree functions terminals 3)]
  [(plot/compose (plot/list-plot data  :plot-size 200 :aspect-ratio 2)
                 (plot/plot (functionalise ex) [0 10]))
   (score data ex)]))
 :columns [(html/html-view "Plot") (html/html-view "Score")])
;; @@
;; =>
;;; {"type":"list-like","open":"<center><table>","close":"</table></center>","separator":"\n","items":[{"type":"list-like","open":"<tr><th>","close":"</th></tr>","separator":"</th><th>","items":[{"type":"html","content":"Plot","value":"#gorilla_repl.html.HtmlView{:content \"Plot\"}"},{"type":"html","content":"Score","value":"#gorilla_repl.html.HtmlView{:content \"Score\"}"}],"value":"[#gorilla_repl.html.HtmlView{:content \"Plot\"} #gorilla_repl.html.HtmlView{:content \"Score\"}]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"vega","content":{"width":200,"height":100.0,"padding":{"bottom":20,"top":10,"right":10,"left":50},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"58a1ff5c-38bd-412e-a370-cbb0bda40927","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"58a1ff5c-38bd-412e-a370-cbb0bda40927","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"58a1ff5c-38bd-412e-a370-cbb0bda40927","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]},{"name":"33f6773c-498e-440a-982a-7ae93bbe4741","values":[{"x":0,"y":0.3122933651163702},{"x":0.10000000149011612,"y":0.23898257849108556},{"x":0.20000000298023224,"y":0.20567179305789382},{"x":0.30000000447034836,"y":0.21236100881679498},{"x":0.4000000059604645,"y":0.2590502257677891},{"x":0.5000000074505806,"y":0.3457394439108761},{"x":0.6000000089406967,"y":0.4724286632460559},{"x":0.7000000104308128,"y":0.6391178837733287},{"x":0.800000011920929,"y":0.8458071054926944},{"x":0.9000000134110451,"y":1.0924963284041531},{"x":1.0000000149011612,"y":1.3791855525077046},{"x":1.1000000163912773,"y":1.705874777803349},{"x":1.2000000178813934,"y":2.0725640042910864},{"x":1.3000000193715096,"y":2.4792532319709166},{"x":1.4000000208616257,"y":2.9259424608428395},{"x":1.5000000223517418,"y":3.4126316909068555},{"x":1.600000023841858,"y":3.9393209221629646},{"x":1.700000025331974,"y":4.506010154611166},{"x":1.8000000268220901,"y":5.112699388251461},{"x":1.9000000283122063,"y":5.759388623083849},{"x":2.0000000298023224,"y":6.446077859108328},{"x":2.1000000312924385,"y":7.172767096324902},{"x":2.2000000327825546,"y":7.939456334733569},{"x":2.3000000342726707,"y":8.746145574334328},{"x":2.400000035762787,"y":9.59283481512718},{"x":2.500000037252903,"y":10.479524057112126},{"x":2.600000038743019,"y":11.406213300289163},{"x":2.7000000402331352,"y":12.372902544658295},{"x":2.8000000417232513,"y":13.37959179021952},{"x":2.9000000432133675,"y":14.426281036972835},{"x":3.0000000447034836,"y":15.512970284918243},{"x":3.1000000461935997,"y":16.63965953405575},{"x":3.200000047683716,"y":17.806348784385342},{"x":3.300000049173832,"y":19.01303803590703},{"x":3.400000050663948,"y":20.259727288620812},{"x":3.500000052154064,"y":21.546416542526686},{"x":3.6000000536441803,"y":22.873105797624653},{"x":3.7000000551342964,"y":24.239795053914712},{"x":3.8000000566244125,"y":25.64648431139687},{"x":3.9000000581145287,"y":27.093173570071112},{"x":4.000000059604645,"y":28.579862829937454},{"x":4.100000061094761,"y":30.106552090995883},{"x":4.200000062584877,"y":31.673241353246404},{"x":4.300000064074993,"y":33.27993061668902},{"x":4.400000065565109,"y":34.92661988132373},{"x":4.500000067055225,"y":36.61330914715054},{"x":4.6000000685453415,"y":38.339998414169436},{"x":4.700000070035458,"y":40.10668768238042},{"x":4.800000071525574,"y":41.9133769517835},{"x":4.90000007301569,"y":43.76006622237868},{"x":5.000000074505806,"y":45.646755494165944},{"x":5.100000075995922,"y":47.573444767145304},{"x":5.200000077486038,"y":49.54013404131676},{"x":5.300000078976154,"y":51.5468233166803},{"x":5.4000000804662704,"y":53.59351259323595},{"x":5.500000081956387,"y":55.68020187098368},{"x":5.600000083446503,"y":57.80689114992351},{"x":5.700000084936619,"y":59.973580430055414},{"x":5.800000086426735,"y":62.18026971137944},{"x":5.900000087916851,"y":64.42695899389554},{"x":6.000000089406967,"y":66.71364827760374},{"x":6.100000090897083,"y":69.04033756250402},{"x":6.200000092387199,"y":71.4070268485964},{"x":6.3000000938773155,"y":73.81371613588088},{"x":6.400000095367432,"y":76.26040542435744},{"x":6.500000096857548,"y":78.7470947140261},{"x":6.600000098347664,"y":81.27378400488686},{"x":6.70000009983778,"y":83.84047329693972},{"x":6.800000101327896,"y":86.44716259018466},{"x":6.900000102818012,"y":89.09385188462169},{"x":7.000000104308128,"y":91.78054118025081},{"x":7.1000001057982445,"y":94.50723047707203},{"x":7.200000107288361,"y":97.27391977508533},{"x":7.300000108778477,"y":100.08060907429073},{"x":7.400000110268593,"y":102.92729837468823},{"x":7.500000111758709,"y":105.81398767627783},{"x":7.600000113248825,"y":108.74067697905951},{"x":7.700000114738941,"y":111.7073662830333},{"x":7.800000116229057,"y":114.71405558819917},{"x":7.900000117719173,"y":117.76074489455715},{"x":8.00000011920929,"y":120.8474342021072},{"x":8.100000120699406,"y":123.97412351084932},{"x":8.200000122189522,"y":127.14081282078357},{"x":8.300000123679638,"y":130.34750213190992},{"x":8.400000125169754,"y":133.59419144422833},{"x":8.50000012665987,"y":136.88088075773885},{"x":8.600000128149986,"y":140.20757007244146},{"x":8.700000129640102,"y":143.57425938833617},{"x":8.800000131130219,"y":146.98094870542297},{"x":8.900000132620335,"y":150.42763802370186},{"x":9.00000013411045,"y":153.91432734317283},{"x":9.100000135600567,"y":157.44101666383594},{"x":9.200000137090683,"y":161.0077059856911},{"x":9.300000138580799,"y":164.61439530873838},{"x":9.400000140070915,"y":168.2610846329777},{"x":9.500000141561031,"y":171.94777395840916},{"x":9.600000143051147,"y":175.67446328503272},{"x":9.700000144541264,"y":179.44115261284836},{"x":9.80000014603138,"y":183.24784194185608},{"x":9.900000147521496,"y":187.0945312720559}]}],"marks":[{"type":"symbol","from":{"data":"58a1ff5c-38bd-412e-a370-cbb0bda40927"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"33f6773c-498e-440a-982a-7ae93bbe4741"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"33f6773c-498e-440a-982a-7ae93bbe4741\", :values ({:x 0, :y 0.3122933651163702} {:x 0.10000000149011612, :y 0.23898257849108556} {:x 0.20000000298023224, :y 0.20567179305789382} {:x 0.30000000447034836, :y 0.21236100881679498} {:x 0.4000000059604645, :y 0.2590502257677891} {:x 0.5000000074505806, :y 0.3457394439108761} {:x 0.6000000089406967, :y 0.4724286632460559} {:x 0.7000000104308128, :y 0.6391178837733287} {:x 0.800000011920929, :y 0.8458071054926944} {:x 0.9000000134110451, :y 1.0924963284041531} {:x 1.0000000149011612, :y 1.3791855525077046} {:x 1.1000000163912773, :y 1.705874777803349} {:x 1.2000000178813934, :y 2.0725640042910864} {:x 1.3000000193715096, :y 2.4792532319709166} {:x 1.4000000208616257, :y 2.9259424608428395} {:x 1.5000000223517418, :y 3.4126316909068555} {:x 1.600000023841858, :y 3.9393209221629646} {:x 1.700000025331974, :y 4.506010154611166} {:x 1.8000000268220901, :y 5.112699388251461} {:x 1.9000000283122063, :y 5.759388623083849} {:x 2.0000000298023224, :y 6.446077859108328} {:x 2.1000000312924385, :y 7.172767096324902} {:x 2.2000000327825546, :y 7.939456334733569} {:x 2.3000000342726707, :y 8.746145574334328} {:x 2.400000035762787, :y 9.59283481512718} {:x 2.500000037252903, :y 10.479524057112126} {:x 2.600000038743019, :y 11.406213300289163} {:x 2.7000000402331352, :y 12.372902544658295} {:x 2.8000000417232513, :y 13.37959179021952} {:x 2.9000000432133675, :y 14.426281036972835} {:x 3.0000000447034836, :y 15.512970284918243} {:x 3.1000000461935997, :y 16.63965953405575} {:x 3.200000047683716, :y 17.806348784385342} {:x 3.300000049173832, :y 19.01303803590703} {:x 3.400000050663948, :y 20.259727288620812} {:x 3.500000052154064, :y 21.546416542526686} {:x 3.6000000536441803, :y 22.873105797624653} {:x 3.7000000551342964, :y 24.239795053914712} {:x 3.8000000566244125, :y 25.64648431139687} {:x 3.9000000581145287, :y 27.093173570071112} {:x 4.000000059604645, :y 28.579862829937454} {:x 4.100000061094761, :y 30.106552090995883} {:x 4.200000062584877, :y 31.673241353246404} {:x 4.300000064074993, :y 33.27993061668902} {:x 4.400000065565109, :y 34.92661988132373} {:x 4.500000067055225, :y 36.61330914715054} {:x 4.6000000685453415, :y 38.339998414169436} {:x 4.700000070035458, :y 40.10668768238042} {:x 4.800000071525574, :y 41.9133769517835} {:x 4.90000007301569, :y 43.76006622237868} {:x 5.000000074505806, :y 45.646755494165944} {:x 5.100000075995922, :y 47.573444767145304} {:x 5.200000077486038, :y 49.54013404131676} {:x 5.300000078976154, :y 51.5468233166803} {:x 5.4000000804662704, :y 53.59351259323595} {:x 5.500000081956387, :y 55.68020187098368} {:x 5.600000083446503, :y 57.80689114992351} {:x 5.700000084936619, :y 59.973580430055414} {:x 5.800000086426735, :y 62.18026971137944} {:x 5.900000087916851, :y 64.42695899389554} {:x 6.000000089406967, :y 66.71364827760374} {:x 6.100000090897083, :y 69.04033756250402} {:x 6.200000092387199, :y 71.4070268485964} {:x 6.3000000938773155, :y 73.81371613588088} {:x 6.400000095367432, :y 76.26040542435744} {:x 6.500000096857548, :y 78.7470947140261} {:x 6.600000098347664, :y 81.27378400488686} {:x 6.70000009983778, :y 83.84047329693972} {:x 6.800000101327896, :y 86.44716259018466} {:x 6.900000102818012, :y 89.09385188462169} {:x 7.000000104308128, :y 91.78054118025081} {:x 7.1000001057982445, :y 94.50723047707203} {:x 7.200000107288361, :y 97.27391977508533} {:x 7.300000108778477, :y 100.08060907429073} {:x 7.400000110268593, :y 102.92729837468823} {:x 7.500000111758709, :y 105.81398767627783} {:x 7.600000113248825, :y 108.74067697905951} {:x 7.700000114738941, :y 111.7073662830333} {:x 7.800000116229057, :y 114.71405558819917} {:x 7.900000117719173, :y 117.76074489455715} {:x 8.00000011920929, :y 120.8474342021072} {:x 8.100000120699406, :y 123.97412351084932} {:x 8.200000122189522, :y 127.14081282078357} {:x 8.300000123679638, :y 130.34750213190992} {:x 8.400000125169754, :y 133.59419144422833} {:x 8.50000012665987, :y 136.88088075773885} {:x 8.600000128149986, :y 140.20757007244146} {:x 8.700000129640102, :y 143.57425938833617} {:x 8.800000131130219, :y 146.98094870542297} {:x 8.900000132620335, :y 150.42763802370186} {:x 9.00000013411045, :y 153.91432734317283} {:x 9.100000135600567, :y 157.44101666383594} {:x 9.200000137090683, :y 161.0077059856911} {:x 9.300000138580799, :y 164.61439530873838} {:x 9.400000140070915, :y 168.2610846329777} {:x 9.500000141561031, :y 171.94777395840916} {:x 9.600000143051147, :y 175.67446328503272} {:x 9.700000144541264, :y 179.44115261284836} {:x 9.80000014603138, :y 183.24784194185608} {:x 9.900000147521496, :y 187.0945312720559})}), :marks ({:type \"symbol\", :from {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"33f6773c-498e-440a-982a-7ae93bbe4741\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"},{"type":"html","content":"<span class='clj-double'>-368.0239659672526</span>","value":"-368.0239659672526"}],"value":"[#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"33f6773c-498e-440a-982a-7ae93bbe4741\", :values ({:x 0, :y 0.3122933651163702} {:x 0.10000000149011612, :y 0.23898257849108556} {:x 0.20000000298023224, :y 0.20567179305789382} {:x 0.30000000447034836, :y 0.21236100881679498} {:x 0.4000000059604645, :y 0.2590502257677891} {:x 0.5000000074505806, :y 0.3457394439108761} {:x 0.6000000089406967, :y 0.4724286632460559} {:x 0.7000000104308128, :y 0.6391178837733287} {:x 0.800000011920929, :y 0.8458071054926944} {:x 0.9000000134110451, :y 1.0924963284041531} {:x 1.0000000149011612, :y 1.3791855525077046} {:x 1.1000000163912773, :y 1.705874777803349} {:x 1.2000000178813934, :y 2.0725640042910864} {:x 1.3000000193715096, :y 2.4792532319709166} {:x 1.4000000208616257, :y 2.9259424608428395} {:x 1.5000000223517418, :y 3.4126316909068555} {:x 1.600000023841858, :y 3.9393209221629646} {:x 1.700000025331974, :y 4.506010154611166} {:x 1.8000000268220901, :y 5.112699388251461} {:x 1.9000000283122063, :y 5.759388623083849} {:x 2.0000000298023224, :y 6.446077859108328} {:x 2.1000000312924385, :y 7.172767096324902} {:x 2.2000000327825546, :y 7.939456334733569} {:x 2.3000000342726707, :y 8.746145574334328} {:x 2.400000035762787, :y 9.59283481512718} {:x 2.500000037252903, :y 10.479524057112126} {:x 2.600000038743019, :y 11.406213300289163} {:x 2.7000000402331352, :y 12.372902544658295} {:x 2.8000000417232513, :y 13.37959179021952} {:x 2.9000000432133675, :y 14.426281036972835} {:x 3.0000000447034836, :y 15.512970284918243} {:x 3.1000000461935997, :y 16.63965953405575} {:x 3.200000047683716, :y 17.806348784385342} {:x 3.300000049173832, :y 19.01303803590703} {:x 3.400000050663948, :y 20.259727288620812} {:x 3.500000052154064, :y 21.546416542526686} {:x 3.6000000536441803, :y 22.873105797624653} {:x 3.7000000551342964, :y 24.239795053914712} {:x 3.8000000566244125, :y 25.64648431139687} {:x 3.9000000581145287, :y 27.093173570071112} {:x 4.000000059604645, :y 28.579862829937454} {:x 4.100000061094761, :y 30.106552090995883} {:x 4.200000062584877, :y 31.673241353246404} {:x 4.300000064074993, :y 33.27993061668902} {:x 4.400000065565109, :y 34.92661988132373} {:x 4.500000067055225, :y 36.61330914715054} {:x 4.6000000685453415, :y 38.339998414169436} {:x 4.700000070035458, :y 40.10668768238042} {:x 4.800000071525574, :y 41.9133769517835} {:x 4.90000007301569, :y 43.76006622237868} {:x 5.000000074505806, :y 45.646755494165944} {:x 5.100000075995922, :y 47.573444767145304} {:x 5.200000077486038, :y 49.54013404131676} {:x 5.300000078976154, :y 51.5468233166803} {:x 5.4000000804662704, :y 53.59351259323595} {:x 5.500000081956387, :y 55.68020187098368} {:x 5.600000083446503, :y 57.80689114992351} {:x 5.700000084936619, :y 59.973580430055414} {:x 5.800000086426735, :y 62.18026971137944} {:x 5.900000087916851, :y 64.42695899389554} {:x 6.000000089406967, :y 66.71364827760374} {:x 6.100000090897083, :y 69.04033756250402} {:x 6.200000092387199, :y 71.4070268485964} {:x 6.3000000938773155, :y 73.81371613588088} {:x 6.400000095367432, :y 76.26040542435744} {:x 6.500000096857548, :y 78.7470947140261} {:x 6.600000098347664, :y 81.27378400488686} {:x 6.70000009983778, :y 83.84047329693972} {:x 6.800000101327896, :y 86.44716259018466} {:x 6.900000102818012, :y 89.09385188462169} {:x 7.000000104308128, :y 91.78054118025081} {:x 7.1000001057982445, :y 94.50723047707203} {:x 7.200000107288361, :y 97.27391977508533} {:x 7.300000108778477, :y 100.08060907429073} {:x 7.400000110268593, :y 102.92729837468823} {:x 7.500000111758709, :y 105.81398767627783} {:x 7.600000113248825, :y 108.74067697905951} {:x 7.700000114738941, :y 111.7073662830333} {:x 7.800000116229057, :y 114.71405558819917} {:x 7.900000117719173, :y 117.76074489455715} {:x 8.00000011920929, :y 120.8474342021072} {:x 8.100000120699406, :y 123.97412351084932} {:x 8.200000122189522, :y 127.14081282078357} {:x 8.300000123679638, :y 130.34750213190992} {:x 8.400000125169754, :y 133.59419144422833} {:x 8.50000012665987, :y 136.88088075773885} {:x 8.600000128149986, :y 140.20757007244146} {:x 8.700000129640102, :y 143.57425938833617} {:x 8.800000131130219, :y 146.98094870542297} {:x 8.900000132620335, :y 150.42763802370186} {:x 9.00000013411045, :y 153.91432734317283} {:x 9.100000135600567, :y 157.44101666383594} {:x 9.200000137090683, :y 161.0077059856911} {:x 9.300000138580799, :y 164.61439530873838} {:x 9.400000140070915, :y 168.2610846329777} {:x 9.500000141561031, :y 171.94777395840916} {:x 9.600000143051147, :y 175.67446328503272} {:x 9.700000144541264, :y 179.44115261284836} {:x 9.80000014603138, :y 183.24784194185608} {:x 9.900000147521496, :y 187.0945312720559})}), :marks ({:type \"symbol\", :from {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"33f6773c-498e-440a-982a-7ae93bbe4741\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -368.0239659672526]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"vega","content":{"width":200,"height":100.0,"padding":{"bottom":20,"top":10,"right":10,"left":50},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"52b22ffb-ae67-46ee-878c-5e262aa71420","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"52b22ffb-ae67-46ee-878c-5e262aa71420","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"52b22ffb-ae67-46ee-878c-5e262aa71420","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]},{"name":"36a71740-1780-46fb-9967-cac0e0e88208","values":[{"x":0,"y":0.5131983895922749},{"x":0.10000000149011612,"y":0.43861756016504194},{"x":0.20000000298023224,"y":0.37863091909458285},{"x":0.30000000447034836,"y":0.3293364927276776},{"x":0.4000000059604645,"y":0.2881094843575956},{"x":0.5000000074505806,"y":0.25311924963432475},{"x":0.6000000089406967,"y":0.22305007092748283},{"x":0.7000000104308128,"y":0.19693200301230385},{"x":0.800000011920929,"y":0.1740342888584139},{"x":0.9000000134110451,"y":0.1537959114365592},{"x":1.0000000149011612,"y":0.1357790146237018},{"x":1.1000000163912773,"y":0.11963686445925774},{"x":1.2000000178813934,"y":0.10509131715528491},{"x":1.3000000193715096,"y":0.09191665788831899},{"x":1.4000000208616257,"y":0.07992780343197439},{"x":1.5000000223517418,"y":0.06897155312345085},{"x":1.600000023841858,"y":0.058920007165150605},{"x":1.700000025331974,"y":0.04966555071610354},{"x":1.8000000268220901,"y":0.041116985761400084},{"x":1.9000000283122063,"y":0.033196515599349885},{"x":2.0000000298023224,"y":0.02583737045831004},{"x":2.1000000312924385,"y":0.01898192065617578},{"x":2.2000000327825546,"y":0.01258016437306241},{"x":2.3000000342726707,"y":0.006588506044859765},{"x":2.400000035762787,"y":9.687622396390421E-4},{"x":2.500000037252903,"y":-0.004312652916565995},{"x":2.600000038743019,"y":-0.009285399492332945},{"x":2.7000000402331352,"y":-0.013975769067182493},{"x":2.8000000417232513,"y":-0.01840714972762467},{"x":2.9000000432133675,"y":-0.022600416105393966},{"x":3.0000000447034836,"y":-0.026574258186184932},{"x":3.1000000461935997,"y":-0.03034545981698076},{"x":3.200000047683716,"y":-0.03392913566643509},{"x":3.300000049173832,"y":-0.037338933693722653},{"x":3.400000050663948,"y":-0.040587208844410104},{"x":3.500000052154064,"y":-0.043685172633409},{"x":3.6000000536441803,"y":-0.04664302243201924},{"x":3.7000000551342964,"y":-0.049470053600801776},{"x":3.8000000566244125,"y":-0.05217475706623738},{"x":3.9000000581145287,"y":-0.05476490449898895},{"x":4.000000059604645,"y":-0.057247622893595126},{"x":4.100000061094761,"y":-0.05962946005688951},{"x":4.200000062584877,"y":-0.06191644227233266},{"x":4.300000064074993,"y":-0.06411412520952557},{"x":4.400000065565109,"y":-0.0662276389843658},{"x":4.500000067055225,"y":-0.06826172813919934},{"x":4.6000000685453415,"y":-0.07022078719881006},{"x":4.700000070035458,"y":-0.0721088923630694},{"x":4.800000071525574,"y":-0.07392982981727095},{"x":4.90000007301569,"y":-0.07568712107391944},{"x":5.000000074505806,"y":-0.0773840457028895},{"x":5.100000075995922,"y":-0.07902366175865425},{"x":5.200000077486038,"y":-0.08060882417227468},{"x":5.300000078976154,"y":-0.08214220134086006},{"x":5.4000000804662704,"y":-0.08362629011728942},{"x":5.500000081956387,"y":-0.0850634293773216},{"x":5.600000083446503,"y":-0.08645581231915962},{"x":5.700000084936619,"y":-0.0878054976315098},{"x":5.800000086426735,"y":-0.08911441964974594},{"x":5.900000087916851,"y":-0.09038439760555117},{"x":6.000000089406967,"y":-0.09161714406305423},{"x":6.100000090897083,"y":-0.0928142726237268},{"x":6.200000092387199,"y":-0.09397730497293601},{"x":6.3000000938773155,"y":-0.09510767733285826},{"x":6.400000095367432,"y":-0.09620674637929248},{"x":6.500000096857548,"y":-0.09727579467362633},{"x":6.600000098347664,"y":-0.09831603565568084},{"x":6.70000009983778,"y":-0.09932861823829943},{"x":6.800000101327896,"y":-0.10031463104025613},{"x":6.900000102818012,"y":-0.10127510629026916},{"x":7.000000104308128,"y":-0.10221102343155274},{"x":7.1000001057982445,"y":-0.10312331245336744},{"x":7.200000107288361,"y":-0.104012856973393},{"x":7.300000108778477,"y":-0.10488049709239469},{"x":7.400000110268593,"y":-0.10572703204057547},{"x":7.500000111758709,"y":-0.10655322263312923},{"x":7.600000113248825,"y":-0.10735979355086037},{"x":7.700000114738941,"y":-0.10814743546023167},{"x":7.800000116229057,"y":-0.10891680698588387},{"x":7.900000117719173,"y":-0.10966853654746019},{"x":8.00000011920929,"y":-0.11040322407150827},{"x":8.100000120699406,"y":-0.11112144258825819},{"x":8.200000122189522,"y":-0.11182373972220704},{"x":8.300000123679638,"y":-0.11251063908466377},{"x":8.400000125169754,"y":-0.11318264157569016},{"x":8.50000012665987,"y":-0.11384022660224734},{"x":8.600000128149986,"y":-0.1144838532187673},{"x":8.700000129640102,"y":-0.11511396119585843},{"x":8.800000131130219,"y":-0.11573097202236696},{"x":8.900000132620335,"y":-0.11633528984559804},{"x":9.00000013411045,"y":-0.11692730235410147},{"x":9.100000135600567,"y":-0.11750738160707225},{"x":9.200000137090683,"y":-0.11807588481409959},{"x":9.300000138580799,"y":-0.11863315506869217},{"x":9.400000140070915,"y":-0.11917952203875083},{"x":9.500000141561031,"y":-0.1197153026169027},{"x":9.600000143051147,"y":-0.12024080153339832},{"x":9.700000144541264,"y":-0.12075631193405684},{"x":9.80000014603138,"y":-0.12126211592556702},{"x":9.900000147521496,"y":-0.12175848509027357}]}],"marks":[{"type":"symbol","from":{"data":"52b22ffb-ae67-46ee-878c-5e262aa71420"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"36a71740-1780-46fb-9967-cac0e0e88208"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"36a71740-1780-46fb-9967-cac0e0e88208\", :values ({:x 0, :y 0.5131983895922749} {:x 0.10000000149011612, :y 0.43861756016504194} {:x 0.20000000298023224, :y 0.37863091909458285} {:x 0.30000000447034836, :y 0.3293364927276776} {:x 0.4000000059604645, :y 0.2881094843575956} {:x 0.5000000074505806, :y 0.25311924963432475} {:x 0.6000000089406967, :y 0.22305007092748283} {:x 0.7000000104308128, :y 0.19693200301230385} {:x 0.800000011920929, :y 0.1740342888584139} {:x 0.9000000134110451, :y 0.1537959114365592} {:x 1.0000000149011612, :y 0.1357790146237018} {:x 1.1000000163912773, :y 0.11963686445925774} {:x 1.2000000178813934, :y 0.10509131715528491} {:x 1.3000000193715096, :y 0.09191665788831899} {:x 1.4000000208616257, :y 0.07992780343197439} {:x 1.5000000223517418, :y 0.06897155312345085} {:x 1.600000023841858, :y 0.058920007165150605} {:x 1.700000025331974, :y 0.04966555071610354} {:x 1.8000000268220901, :y 0.041116985761400084} {:x 1.9000000283122063, :y 0.033196515599349885} {:x 2.0000000298023224, :y 0.02583737045831004} {:x 2.1000000312924385, :y 0.01898192065617578} {:x 2.2000000327825546, :y 0.01258016437306241} {:x 2.3000000342726707, :y 0.006588506044859765} {:x 2.400000035762787, :y 9.687622396390421E-4} {:x 2.500000037252903, :y -0.004312652916565995} {:x 2.600000038743019, :y -0.009285399492332945} {:x 2.7000000402331352, :y -0.013975769067182493} {:x 2.8000000417232513, :y -0.01840714972762467} {:x 2.9000000432133675, :y -0.022600416105393966} {:x 3.0000000447034836, :y -0.026574258186184932} {:x 3.1000000461935997, :y -0.03034545981698076} {:x 3.200000047683716, :y -0.03392913566643509} {:x 3.300000049173832, :y -0.037338933693722653} {:x 3.400000050663948, :y -0.040587208844410104} {:x 3.500000052154064, :y -0.043685172633409} {:x 3.6000000536441803, :y -0.04664302243201924} {:x 3.7000000551342964, :y -0.049470053600801776} {:x 3.8000000566244125, :y -0.05217475706623738} {:x 3.9000000581145287, :y -0.05476490449898895} {:x 4.000000059604645, :y -0.057247622893595126} {:x 4.100000061094761, :y -0.05962946005688951} {:x 4.200000062584877, :y -0.06191644227233266} {:x 4.300000064074993, :y -0.06411412520952557} {:x 4.400000065565109, :y -0.0662276389843658} {:x 4.500000067055225, :y -0.06826172813919934} {:x 4.6000000685453415, :y -0.07022078719881006} {:x 4.700000070035458, :y -0.0721088923630694} {:x 4.800000071525574, :y -0.07392982981727095} {:x 4.90000007301569, :y -0.07568712107391944} {:x 5.000000074505806, :y -0.0773840457028895} {:x 5.100000075995922, :y -0.07902366175865425} {:x 5.200000077486038, :y -0.08060882417227468} {:x 5.300000078976154, :y -0.08214220134086006} {:x 5.4000000804662704, :y -0.08362629011728942} {:x 5.500000081956387, :y -0.0850634293773216} {:x 5.600000083446503, :y -0.08645581231915962} {:x 5.700000084936619, :y -0.0878054976315098} {:x 5.800000086426735, :y -0.08911441964974594} {:x 5.900000087916851, :y -0.09038439760555117} {:x 6.000000089406967, :y -0.09161714406305423} {:x 6.100000090897083, :y -0.0928142726237268} {:x 6.200000092387199, :y -0.09397730497293601} {:x 6.3000000938773155, :y -0.09510767733285826} {:x 6.400000095367432, :y -0.09620674637929248} {:x 6.500000096857548, :y -0.09727579467362633} {:x 6.600000098347664, :y -0.09831603565568084} {:x 6.70000009983778, :y -0.09932861823829943} {:x 6.800000101327896, :y -0.10031463104025613} {:x 6.900000102818012, :y -0.10127510629026916} {:x 7.000000104308128, :y -0.10221102343155274} {:x 7.1000001057982445, :y -0.10312331245336744} {:x 7.200000107288361, :y -0.104012856973393} {:x 7.300000108778477, :y -0.10488049709239469} {:x 7.400000110268593, :y -0.10572703204057547} {:x 7.500000111758709, :y -0.10655322263312923} {:x 7.600000113248825, :y -0.10735979355086037} {:x 7.700000114738941, :y -0.10814743546023167} {:x 7.800000116229057, :y -0.10891680698588387} {:x 7.900000117719173, :y -0.10966853654746019} {:x 8.00000011920929, :y -0.11040322407150827} {:x 8.100000120699406, :y -0.11112144258825819} {:x 8.200000122189522, :y -0.11182373972220704} {:x 8.300000123679638, :y -0.11251063908466377} {:x 8.400000125169754, :y -0.11318264157569016} {:x 8.50000012665987, :y -0.11384022660224734} {:x 8.600000128149986, :y -0.1144838532187673} {:x 8.700000129640102, :y -0.11511396119585843} {:x 8.800000131130219, :y -0.11573097202236696} {:x 8.900000132620335, :y -0.11633528984559804} {:x 9.00000013411045, :y -0.11692730235410147} {:x 9.100000135600567, :y -0.11750738160707225} {:x 9.200000137090683, :y -0.11807588481409959} {:x 9.300000138580799, :y -0.11863315506869217} {:x 9.400000140070915, :y -0.11917952203875083} {:x 9.500000141561031, :y -0.1197153026169027} {:x 9.600000143051147, :y -0.12024080153339832} {:x 9.700000144541264, :y -0.12075631193405684} {:x 9.80000014603138, :y -0.12126211592556702} {:x 9.900000147521496, :y -0.12175848509027357})}), :marks ({:type \"symbol\", :from {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"36a71740-1780-46fb-9967-cac0e0e88208\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"},{"type":"html","content":"<span class='clj-double'>-1521.2505633250257</span>","value":"-1521.2505633250257"}],"value":"[#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"36a71740-1780-46fb-9967-cac0e0e88208\", :values ({:x 0, :y 0.5131983895922749} {:x 0.10000000149011612, :y 0.43861756016504194} {:x 0.20000000298023224, :y 0.37863091909458285} {:x 0.30000000447034836, :y 0.3293364927276776} {:x 0.4000000059604645, :y 0.2881094843575956} {:x 0.5000000074505806, :y 0.25311924963432475} {:x 0.6000000089406967, :y 0.22305007092748283} {:x 0.7000000104308128, :y 0.19693200301230385} {:x 0.800000011920929, :y 0.1740342888584139} {:x 0.9000000134110451, :y 0.1537959114365592} {:x 1.0000000149011612, :y 0.1357790146237018} {:x 1.1000000163912773, :y 0.11963686445925774} {:x 1.2000000178813934, :y 0.10509131715528491} {:x 1.3000000193715096, :y 0.09191665788831899} {:x 1.4000000208616257, :y 0.07992780343197439} {:x 1.5000000223517418, :y 0.06897155312345085} {:x 1.600000023841858, :y 0.058920007165150605} {:x 1.700000025331974, :y 0.04966555071610354} {:x 1.8000000268220901, :y 0.041116985761400084} {:x 1.9000000283122063, :y 0.033196515599349885} {:x 2.0000000298023224, :y 0.02583737045831004} {:x 2.1000000312924385, :y 0.01898192065617578} {:x 2.2000000327825546, :y 0.01258016437306241} {:x 2.3000000342726707, :y 0.006588506044859765} {:x 2.400000035762787, :y 9.687622396390421E-4} {:x 2.500000037252903, :y -0.004312652916565995} {:x 2.600000038743019, :y -0.009285399492332945} {:x 2.7000000402331352, :y -0.013975769067182493} {:x 2.8000000417232513, :y -0.01840714972762467} {:x 2.9000000432133675, :y -0.022600416105393966} {:x 3.0000000447034836, :y -0.026574258186184932} {:x 3.1000000461935997, :y -0.03034545981698076} {:x 3.200000047683716, :y -0.03392913566643509} {:x 3.300000049173832, :y -0.037338933693722653} {:x 3.400000050663948, :y -0.040587208844410104} {:x 3.500000052154064, :y -0.043685172633409} {:x 3.6000000536441803, :y -0.04664302243201924} {:x 3.7000000551342964, :y -0.049470053600801776} {:x 3.8000000566244125, :y -0.05217475706623738} {:x 3.9000000581145287, :y -0.05476490449898895} {:x 4.000000059604645, :y -0.057247622893595126} {:x 4.100000061094761, :y -0.05962946005688951} {:x 4.200000062584877, :y -0.06191644227233266} {:x 4.300000064074993, :y -0.06411412520952557} {:x 4.400000065565109, :y -0.0662276389843658} {:x 4.500000067055225, :y -0.06826172813919934} {:x 4.6000000685453415, :y -0.07022078719881006} {:x 4.700000070035458, :y -0.0721088923630694} {:x 4.800000071525574, :y -0.07392982981727095} {:x 4.90000007301569, :y -0.07568712107391944} {:x 5.000000074505806, :y -0.0773840457028895} {:x 5.100000075995922, :y -0.07902366175865425} {:x 5.200000077486038, :y -0.08060882417227468} {:x 5.300000078976154, :y -0.08214220134086006} {:x 5.4000000804662704, :y -0.08362629011728942} {:x 5.500000081956387, :y -0.0850634293773216} {:x 5.600000083446503, :y -0.08645581231915962} {:x 5.700000084936619, :y -0.0878054976315098} {:x 5.800000086426735, :y -0.08911441964974594} {:x 5.900000087916851, :y -0.09038439760555117} {:x 6.000000089406967, :y -0.09161714406305423} {:x 6.100000090897083, :y -0.0928142726237268} {:x 6.200000092387199, :y -0.09397730497293601} {:x 6.3000000938773155, :y -0.09510767733285826} {:x 6.400000095367432, :y -0.09620674637929248} {:x 6.500000096857548, :y -0.09727579467362633} {:x 6.600000098347664, :y -0.09831603565568084} {:x 6.70000009983778, :y -0.09932861823829943} {:x 6.800000101327896, :y -0.10031463104025613} {:x 6.900000102818012, :y -0.10127510629026916} {:x 7.000000104308128, :y -0.10221102343155274} {:x 7.1000001057982445, :y -0.10312331245336744} {:x 7.200000107288361, :y -0.104012856973393} {:x 7.300000108778477, :y -0.10488049709239469} {:x 7.400000110268593, :y -0.10572703204057547} {:x 7.500000111758709, :y -0.10655322263312923} {:x 7.600000113248825, :y -0.10735979355086037} {:x 7.700000114738941, :y -0.10814743546023167} {:x 7.800000116229057, :y -0.10891680698588387} {:x 7.900000117719173, :y -0.10966853654746019} {:x 8.00000011920929, :y -0.11040322407150827} {:x 8.100000120699406, :y -0.11112144258825819} {:x 8.200000122189522, :y -0.11182373972220704} {:x 8.300000123679638, :y -0.11251063908466377} {:x 8.400000125169754, :y -0.11318264157569016} {:x 8.50000012665987, :y -0.11384022660224734} {:x 8.600000128149986, :y -0.1144838532187673} {:x 8.700000129640102, :y -0.11511396119585843} {:x 8.800000131130219, :y -0.11573097202236696} {:x 8.900000132620335, :y -0.11633528984559804} {:x 9.00000013411045, :y -0.11692730235410147} {:x 9.100000135600567, :y -0.11750738160707225} {:x 9.200000137090683, :y -0.11807588481409959} {:x 9.300000138580799, :y -0.11863315506869217} {:x 9.400000140070915, :y -0.11917952203875083} {:x 9.500000141561031, :y -0.1197153026169027} {:x 9.600000143051147, :y -0.12024080153339832} {:x 9.700000144541264, :y -0.12075631193405684} {:x 9.80000014603138, :y -0.12126211592556702} {:x 9.900000147521496, :y -0.12175848509027357})}), :marks ({:type \"symbol\", :from {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"36a71740-1780-46fb-9967-cac0e0e88208\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1521.2505633250257]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"vega","content":{"width":200,"height":100.0,"padding":{"bottom":20,"top":10,"right":10,"left":50},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]},{"name":"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f","values":[{"x":0,"y":-0.3338034205636063},{"x":0.10000000149011612,"y":-0.3200359993794256},{"x":0.20000000298023224,"y":-0.3004215054013975},{"x":0.30000000447034836,"y":-0.27557804754510284},{"x":0.4000000059604645,"y":-0.24612373472612226},{"x":0.5000000074505806,"y":-0.2126766758600366},{"x":0.6000000089406967,"y":-0.17585497986242657},{"x":0.7000000104308128,"y":-0.13627675564887284},{"x":0.800000011920929,"y":-0.09456011213495619},{"x":0.9000000134110451,"y":-0.051323158236257424},{"x":1.0000000149011612,"y":-0.0071840028683571745},{"x":1.1000000163912773,"y":0.03723924505316374},{"x":1.2000000178813934,"y":0.08132847661272466},{"x":1.3000000193715096,"y":0.12446558289474474},{"x":1.4000000208616257,"y":0.16603245498364327},{"x":1.5000000223517418,"y":0.20541098396383953},{"x":1.600000023841858,"y":0.24198306091975275},{"x":1.700000025331974,"y":0.27513057693580256},{"x":1.8000000268220901,"y":0.30423542309640755},{"x":1.9000000283122063,"y":0.32867949048598727},{"x":2.0000000298023224,"y":0.34784467018896104},{"x":2.1000000312924385,"y":0.361112853289748},{"x":2.2000000327825546,"y":0.36786593087276837},{"x":2.3000000342726707,"y":0.3674857940224388},{"x":2.400000035762787,"y":0.35935433382318216},{"x":2.500000037252903,"y":0.3428534413594149},{"x":2.600000038743019,"y":0.31736500771555715},{"x":2.7000000402331352,"y":0.28227092397602827},{"x":2.8000000417232513,"y":0.23695308122524741},{"x":2.9000000432133675,"y":0.1807933705476339},{"x":3.0000000447034836,"y":0.11317368302760691},{"x":3.1000000461935997,"y":0.033475909749585815},{"x":3.200000047683716,"y":-0.05891805820201019},{"x":3.300000049173832,"y":-0.16462632974276184},{"x":3.400000050663948,"y":-0.2842670137882452},{"x":3.500000052154064,"y":-0.4184582192540501},{"x":3.6000000536441803,"y":-0.5678180550557528},{"x":3.7000000551342964,"y":-0.7329646301089341},{"x":3.8000000566244125,"y":-0.9145160533291747},{"x":3.9000000581145287,"y":-1.1130904336320555},{"x":4.000000059604645,"y":-1.3293058799331572},{"x":4.100000061094761,"y":-1.5637805011480603},{"x":4.200000062584877,"y":-1.8171324061923457},{"x":4.300000064074993,"y":-2.089979703981587},{"x":4.400000065565109,"y":-2.3829405034313784},{"x":4.500000067055225,"y":-2.6966329134573033},{"x":4.6000000685453415,"y":-3.031675042974926},{"x":4.700000070035458,"y":-3.3886850008998337},{"x":4.800000071525574,"y":-3.7682808961475893},{"x":4.90000007301569,"y":-4.171080837633811},{"x":5.000000074505806,"y":-4.597702934274061},{"x":5.100000075995922,"y":-5.0487652949839195},{"x":5.200000077486038,"y":-5.524886028678968},{"x":5.300000078976154,"y":-6.026683244274787},{"x":5.4000000804662704,"y":-6.554775050686957},{"x":5.500000081956387,"y":-7.10977955683106},{"x":5.600000083446503,"y":-7.692314871622674},{"x":5.700000084936619,"y":-8.302999103977383},{"x":5.800000086426735,"y":-8.942450362810767},{"x":5.900000087916851,"y":-9.611286757038403},{"x":6.000000089406967,"y":-10.310126395575876},{"x":6.100000090897083,"y":-11.039587387338766},{"x":6.200000092387199,"y":-11.800287841242652},{"x":6.3000000938773155,"y":-12.592845866203117},{"x":6.400000095367432,"y":-13.41787957113574},{"x":6.500000096857548,"y":-14.276007064956103},{"x":6.600000098347664,"y":-15.167846456579785},{"x":6.70000009983778,"y":-16.09401585492233},{"x":6.800000101327896,"y":-17.055133368899394},{"x":6.900000102818012,"y":-18.05181710742652},{"x":7.000000104308128,"y":-19.084685179419292},{"x":7.1000001057982445,"y":-20.154355693793285},{"x":7.200000107288361,"y":-21.26144675946408},{"x":7.300000108778477,"y":-22.406576485347262},{"x":7.400000110268593,"y":-23.590362980358414},{"x":7.500000111758709,"y":-24.813424353413108},{"x":7.600000113248825,"y":-26.07637871342693},{"x":7.700000114738941,"y":-27.37984416931546},{"x":7.800000116229057,"y":-28.724438829994284},{"x":7.900000117719173,"y":-30.110780804378972},{"x":8.00000011920929,"y":-31.539488201385115},{"x":8.100000120699406,"y":-33.01117912992829},{"x":8.200000122189522,"y":-34.52647169892407},{"x":8.300000123679638,"y":-36.08598401728805},{"x":8.400000125169754,"y":-37.69033419393573},{"x":8.50000012665987,"y":-39.340140337782834},{"x":8.600000128149986,"y":-41.03602055774481},{"x":8.700000129640102,"y":-42.77859296273736},{"x":8.800000131130219,"y":-44.56847566167601},{"x":8.900000132620335,"y":-46.40628676347634},{"x":9.00000013411045,"y":-48.29264437705399},{"x":9.100000135600567,"y":-50.22816661132434},{"x":9.200000137090683,"y":-52.213471575203265},{"x":9.300000138580799,"y":-54.249177377606024},{"x":9.400000140070915,"y":-56.33590212744852},{"x":9.500000141561031,"y":-58.47426393364603},{"x":9.600000143051147,"y":-60.66488090511427},{"x":9.700000144541264,"y":-62.90837115076901},{"x":9.80000014603138,"y":-65.20535277952547},{"x":9.900000147521496,"y":-67.5564439002996}]}],"marks":[{"type":"symbol","from":{"data":"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\", :values ({:x 0, :y -0.3338034205636063} {:x 0.10000000149011612, :y -0.3200359993794256} {:x 0.20000000298023224, :y -0.3004215054013975} {:x 0.30000000447034836, :y -0.27557804754510284} {:x 0.4000000059604645, :y -0.24612373472612226} {:x 0.5000000074505806, :y -0.2126766758600366} {:x 0.6000000089406967, :y -0.17585497986242657} {:x 0.7000000104308128, :y -0.13627675564887284} {:x 0.800000011920929, :y -0.09456011213495619} {:x 0.9000000134110451, :y -0.051323158236257424} {:x 1.0000000149011612, :y -0.0071840028683571745} {:x 1.1000000163912773, :y 0.03723924505316374} {:x 1.2000000178813934, :y 0.08132847661272466} {:x 1.3000000193715096, :y 0.12446558289474474} {:x 1.4000000208616257, :y 0.16603245498364327} {:x 1.5000000223517418, :y 0.20541098396383953} {:x 1.600000023841858, :y 0.24198306091975275} {:x 1.700000025331974, :y 0.27513057693580256} {:x 1.8000000268220901, :y 0.30423542309640755} {:x 1.9000000283122063, :y 0.32867949048598727} {:x 2.0000000298023224, :y 0.34784467018896104} {:x 2.1000000312924385, :y 0.361112853289748} {:x 2.2000000327825546, :y 0.36786593087276837} {:x 2.3000000342726707, :y 0.3674857940224388} {:x 2.400000035762787, :y 0.35935433382318216} {:x 2.500000037252903, :y 0.3428534413594149} {:x 2.600000038743019, :y 0.31736500771555715} {:x 2.7000000402331352, :y 0.28227092397602827} {:x 2.8000000417232513, :y 0.23695308122524741} {:x 2.9000000432133675, :y 0.1807933705476339} {:x 3.0000000447034836, :y 0.11317368302760691} {:x 3.1000000461935997, :y 0.033475909749585815} {:x 3.200000047683716, :y -0.05891805820201019} {:x 3.300000049173832, :y -0.16462632974276184} {:x 3.400000050663948, :y -0.2842670137882452} {:x 3.500000052154064, :y -0.4184582192540501} {:x 3.6000000536441803, :y -0.5678180550557528} {:x 3.7000000551342964, :y -0.7329646301089341} {:x 3.8000000566244125, :y -0.9145160533291747} {:x 3.9000000581145287, :y -1.1130904336320555} {:x 4.000000059604645, :y -1.3293058799331572} {:x 4.100000061094761, :y -1.5637805011480603} {:x 4.200000062584877, :y -1.8171324061923457} {:x 4.300000064074993, :y -2.089979703981587} {:x 4.400000065565109, :y -2.3829405034313784} {:x 4.500000067055225, :y -2.6966329134573033} {:x 4.6000000685453415, :y -3.031675042974926} {:x 4.700000070035458, :y -3.3886850008998337} {:x 4.800000071525574, :y -3.7682808961475893} {:x 4.90000007301569, :y -4.171080837633811} {:x 5.000000074505806, :y -4.597702934274061} {:x 5.100000075995922, :y -5.0487652949839195} {:x 5.200000077486038, :y -5.524886028678968} {:x 5.300000078976154, :y -6.026683244274787} {:x 5.4000000804662704, :y -6.554775050686957} {:x 5.500000081956387, :y -7.10977955683106} {:x 5.600000083446503, :y -7.692314871622674} {:x 5.700000084936619, :y -8.302999103977383} {:x 5.800000086426735, :y -8.942450362810767} {:x 5.900000087916851, :y -9.611286757038403} {:x 6.000000089406967, :y -10.310126395575876} {:x 6.100000090897083, :y -11.039587387338766} {:x 6.200000092387199, :y -11.800287841242652} {:x 6.3000000938773155, :y -12.592845866203117} {:x 6.400000095367432, :y -13.41787957113574} {:x 6.500000096857548, :y -14.276007064956103} {:x 6.600000098347664, :y -15.167846456579785} {:x 6.70000009983778, :y -16.09401585492233} {:x 6.800000101327896, :y -17.055133368899394} {:x 6.900000102818012, :y -18.05181710742652} {:x 7.000000104308128, :y -19.084685179419292} {:x 7.1000001057982445, :y -20.154355693793285} {:x 7.200000107288361, :y -21.26144675946408} {:x 7.300000108778477, :y -22.406576485347262} {:x 7.400000110268593, :y -23.590362980358414} {:x 7.500000111758709, :y -24.813424353413108} {:x 7.600000113248825, :y -26.07637871342693} {:x 7.700000114738941, :y -27.37984416931546} {:x 7.800000116229057, :y -28.724438829994284} {:x 7.900000117719173, :y -30.110780804378972} {:x 8.00000011920929, :y -31.539488201385115} {:x 8.100000120699406, :y -33.01117912992829} {:x 8.200000122189522, :y -34.52647169892407} {:x 8.300000123679638, :y -36.08598401728805} {:x 8.400000125169754, :y -37.69033419393573} {:x 8.50000012665987, :y -39.340140337782834} {:x 8.600000128149986, :y -41.03602055774481} {:x 8.700000129640102, :y -42.77859296273736} {:x 8.800000131130219, :y -44.56847566167601} {:x 8.900000132620335, :y -46.40628676347634} {:x 9.00000013411045, :y -48.29264437705399} {:x 9.100000135600567, :y -50.22816661132434} {:x 9.200000137090683, :y -52.213471575203265} {:x 9.300000138580799, :y -54.249177377606024} {:x 9.400000140070915, :y -56.33590212744852} {:x 9.500000141561031, :y -58.47426393364603} {:x 9.600000143051147, :y -60.66488090511427} {:x 9.700000144541264, :y -62.90837115076901} {:x 9.80000014603138, :y -65.20535277952547} {:x 9.900000147521496, :y -67.5564439002996})}), :marks ({:type \"symbol\", :from {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"},{"type":"html","content":"<span class='clj-double'>-1781.8270259859582</span>","value":"-1781.8270259859582"}],"value":"[#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\", :values ({:x 0, :y -0.3338034205636063} {:x 0.10000000149011612, :y -0.3200359993794256} {:x 0.20000000298023224, :y -0.3004215054013975} {:x 0.30000000447034836, :y -0.27557804754510284} {:x 0.4000000059604645, :y -0.24612373472612226} {:x 0.5000000074505806, :y -0.2126766758600366} {:x 0.6000000089406967, :y -0.17585497986242657} {:x 0.7000000104308128, :y -0.13627675564887284} {:x 0.800000011920929, :y -0.09456011213495619} {:x 0.9000000134110451, :y -0.051323158236257424} {:x 1.0000000149011612, :y -0.0071840028683571745} {:x 1.1000000163912773, :y 0.03723924505316374} {:x 1.2000000178813934, :y 0.08132847661272466} {:x 1.3000000193715096, :y 0.12446558289474474} {:x 1.4000000208616257, :y 0.16603245498364327} {:x 1.5000000223517418, :y 0.20541098396383953} {:x 1.600000023841858, :y 0.24198306091975275} {:x 1.700000025331974, :y 0.27513057693580256} {:x 1.8000000268220901, :y 0.30423542309640755} {:x 1.9000000283122063, :y 0.32867949048598727} {:x 2.0000000298023224, :y 0.34784467018896104} {:x 2.1000000312924385, :y 0.361112853289748} {:x 2.2000000327825546, :y 0.36786593087276837} {:x 2.3000000342726707, :y 0.3674857940224388} {:x 2.400000035762787, :y 0.35935433382318216} {:x 2.500000037252903, :y 0.3428534413594149} {:x 2.600000038743019, :y 0.31736500771555715} {:x 2.7000000402331352, :y 0.28227092397602827} {:x 2.8000000417232513, :y 0.23695308122524741} {:x 2.9000000432133675, :y 0.1807933705476339} {:x 3.0000000447034836, :y 0.11317368302760691} {:x 3.1000000461935997, :y 0.033475909749585815} {:x 3.200000047683716, :y -0.05891805820201019} {:x 3.300000049173832, :y -0.16462632974276184} {:x 3.400000050663948, :y -0.2842670137882452} {:x 3.500000052154064, :y -0.4184582192540501} {:x 3.6000000536441803, :y -0.5678180550557528} {:x 3.7000000551342964, :y -0.7329646301089341} {:x 3.8000000566244125, :y -0.9145160533291747} {:x 3.9000000581145287, :y -1.1130904336320555} {:x 4.000000059604645, :y -1.3293058799331572} {:x 4.100000061094761, :y -1.5637805011480603} {:x 4.200000062584877, :y -1.8171324061923457} {:x 4.300000064074993, :y -2.089979703981587} {:x 4.400000065565109, :y -2.3829405034313784} {:x 4.500000067055225, :y -2.6966329134573033} {:x 4.6000000685453415, :y -3.031675042974926} {:x 4.700000070035458, :y -3.3886850008998337} {:x 4.800000071525574, :y -3.7682808961475893} {:x 4.90000007301569, :y -4.171080837633811} {:x 5.000000074505806, :y -4.597702934274061} {:x 5.100000075995922, :y -5.0487652949839195} {:x 5.200000077486038, :y -5.524886028678968} {:x 5.300000078976154, :y -6.026683244274787} {:x 5.4000000804662704, :y -6.554775050686957} {:x 5.500000081956387, :y -7.10977955683106} {:x 5.600000083446503, :y -7.692314871622674} {:x 5.700000084936619, :y -8.302999103977383} {:x 5.800000086426735, :y -8.942450362810767} {:x 5.900000087916851, :y -9.611286757038403} {:x 6.000000089406967, :y -10.310126395575876} {:x 6.100000090897083, :y -11.039587387338766} {:x 6.200000092387199, :y -11.800287841242652} {:x 6.3000000938773155, :y -12.592845866203117} {:x 6.400000095367432, :y -13.41787957113574} {:x 6.500000096857548, :y -14.276007064956103} {:x 6.600000098347664, :y -15.167846456579785} {:x 6.70000009983778, :y -16.09401585492233} {:x 6.800000101327896, :y -17.055133368899394} {:x 6.900000102818012, :y -18.05181710742652} {:x 7.000000104308128, :y -19.084685179419292} {:x 7.1000001057982445, :y -20.154355693793285} {:x 7.200000107288361, :y -21.26144675946408} {:x 7.300000108778477, :y -22.406576485347262} {:x 7.400000110268593, :y -23.590362980358414} {:x 7.500000111758709, :y -24.813424353413108} {:x 7.600000113248825, :y -26.07637871342693} {:x 7.700000114738941, :y -27.37984416931546} {:x 7.800000116229057, :y -28.724438829994284} {:x 7.900000117719173, :y -30.110780804378972} {:x 8.00000011920929, :y -31.539488201385115} {:x 8.100000120699406, :y -33.01117912992829} {:x 8.200000122189522, :y -34.52647169892407} {:x 8.300000123679638, :y -36.08598401728805} {:x 8.400000125169754, :y -37.69033419393573} {:x 8.50000012665987, :y -39.340140337782834} {:x 8.600000128149986, :y -41.03602055774481} {:x 8.700000129640102, :y -42.77859296273736} {:x 8.800000131130219, :y -44.56847566167601} {:x 8.900000132620335, :y -46.40628676347634} {:x 9.00000013411045, :y -48.29264437705399} {:x 9.100000135600567, :y -50.22816661132434} {:x 9.200000137090683, :y -52.213471575203265} {:x 9.300000138580799, :y -54.249177377606024} {:x 9.400000140070915, :y -56.33590212744852} {:x 9.500000141561031, :y -58.47426393364603} {:x 9.600000143051147, :y -60.66488090511427} {:x 9.700000144541264, :y -62.90837115076901} {:x 9.80000014603138, :y -65.20535277952547} {:x 9.900000147521496, :y -67.5564439002996})}), :marks ({:type \"symbol\", :from {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1781.8270259859582]"},{"type":"list-like","open":"<tr><td>","close":"</td></tr>","separator":"</td><td>","items":[{"type":"vega","content":{"width":200,"height":100.0,"padding":{"bottom":20,"top":10,"right":10,"left":50},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"a2b8f73c-641e-4510-9657-ead3321f1acf","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"a2b8f73c-641e-4510-9657-ead3321f1acf","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"a2b8f73c-641e-4510-9657-ead3321f1acf","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]},{"name":"73022065-55df-4ea8-8d33-904f3e8e2466","values":[{"x":0,"y":5.160059997684871},{"x":0.10000000149011612,"y":-20.750241033296117},{"x":0.20000000298023224,"y":-2.709933249167006},{"x":0.30000000447034836,"y":-1.1561147552879691},{"x":0.4000000059604645,"y":-0.5434975485767347},{"x":0.5000000074505806,"y":-0.19684280006394428},{"x":0.6000000089406967,"y":0.03783313116636178},{"x":0.7000000104308128,"y":0.21487449672906633},{"x":0.800000011920929,"y":0.35835710137625},{"x":0.9000000134110451,"y":0.4805860961768178},{"x":1.0000000149011612,"y":0.5885058667105101},{"x":1.1000000163912773,"y":0.6863325986075423},{"x":1.2000000178813934,"y":0.7767742240916324},{"x":1.3000000193715096,"y":0.861649490407166},{"x":1.4000000208616257,"y":0.9422252415089843},{"x":1.5000000223517418,"y":1.0194110018324272},{"x":1.600000023841858,"y":1.0938766577768457},{"x":1.700000025331974,"y":1.166126503993939},{"x":1.8000000268220901,"y":1.2365474319698246},{"x":1.9000000283122063,"y":1.3054412162168032},{"x":2.0000000298023224,"y":1.373046701371511},{"x":2.1000000312924385,"y":1.439555393069631},{"x":2.2000000327825546,"y":1.505122632483611},{"x":2.3000000342726707,"y":1.5698757482148749},{"x":2.400000035762787,"y":1.6339200982680555},{"x":2.500000037252903,"y":1.697343612877547},{"x":2.600000038743019,"y":1.760220254919957},{"x":2.7000000402331352,"y":1.8226126873098911},{"x":2.8000000417232513,"y":1.8845743516021152},{"x":2.9000000432133675,"y":1.9461511040497699},{"x":3.0000000447034836,"y":2.0073825152747005},{"x":3.1000000461935997,"y":2.0683029115680385},{"x":3.200000047683716,"y":2.1289422158227462},{"x":3.300000049173832,"y":2.1893266316812454},{"x":3.400000050663948,"y":2.249479203973486},{"x":3.500000052154064,"y":2.3094202807797264},{"x":3.6000000536441803,"y":2.369167896691504},{"x":3.7000000551342964,"y":2.4287380925164497},{"x":3.8000000566244125,"y":2.4881451833923403},{"x":3.9000000581145287,"y":2.5474019847687486},{"x":4.000000059604645,"y":2.606520003783449},{"x":4.100000061094761,"y":2.665509602062131},{"x":4.200000062584877,"y":2.7243801347988446},{"x":4.300000064074993,"y":2.7831400700533653},{"x":4.400000065565109,"y":2.8417970914724333},{"x":4.500000067055225,"y":2.900358187061142},{"x":4.6000000685453415,"y":2.958829726165722},{"x":4.700000070035458,"y":3.0172175264545826},{"x":4.800000071525574,"y":3.07552691238151},{"x":4.90000007301569,"y":3.1337627663685015},{"x":5.000000074505806,"y":3.191929573744473},{"x":5.100000075995922,"y":3.250031462310833},{"x":5.200000077486038,"y":3.308072237268805},{"x":5.300000078976154,"y":3.366055412130704},{"x":5.4000000804662704,"y":3.423984236143771},{"x":5.500000081956387,"y":3.481861718677133},{"x":5.600000083446503,"y":3.539690650957123},{"x":5.700000084936619,"y":3.5974736254813475},{"x":5.800000086426735,"y":3.6552130533956535},{"x":5.900000087916851,"y":3.7129111800790966},{"x":6.000000089406967,"y":3.770570099148857},{"x":6.100000090897083,"y":3.8281917650688935},{"x":6.200000092387199,"y":3.885778004522083},{"x":6.3000000938773155,"y":3.943330526685043},{"x":6.400000095367432,"y":4.000850932527219},{"x":6.500000096857548,"y":4.058340723240638},{"x":6.600000098347664,"y":4.115801307893717},{"x":6.70000009983778,"y":4.17323401039116},{"x":6.800000101327896,"y":4.230640075812282},{"x":6.900000102818012,"y":4.28802067619155},{"x":7.000000104308128,"y":4.345376915797794},{"x":7.1000001057982445,"y":4.402709835962078},{"x":7.200000107288361,"y":4.46002041949863},{"x":7.300000108778477,"y":4.517309594758283},{"x":7.400000110268593,"y":4.574578239349591},{"x":7.500000111758709,"y":4.631827183558959},{"x":7.600000113248825,"y":4.689057213497835},{"x":7.700000114738941,"y":4.746269074002031},{"x":7.800000116229057,"y":4.803463471305644},{"x":7.900000117719173,"y":4.860641075509782},{"x":8.00000011920929,"y":4.917802522864214},{"x":8.100000120699406,"y":4.974948417878285},{"x":8.200000122189522,"y":5.032079335275823},{"x":8.300000123679638,"y":5.089195821807303},{"x":8.400000125169754,"y":5.146298397931325},{"x":8.50000012665987,"y":5.203387559376217},{"x":8.600000128149986,"y":5.260463778591659},{"x":8.700000129640102,"y":5.317527506099243},{"x":8.800000131130219,"y":5.37457917175008},{"x":8.900000132620335,"y":5.431619185896838},{"x":9.00000013411045,"y":5.488647940486933},{"x":9.100000135600567,"y":5.545665810082981},{"x":9.200000137090683,"y":5.602673152816105},{"x":9.300000138580799,"y":5.659670311277191},{"x":9.400000140070915,"y":5.716657613350756},{"x":9.500000141561031,"y":5.773635372995691},{"x":9.600000143051147,"y":5.830603890976795},{"x":9.700000144541264,"y":5.887563455550667},{"x":9.80000014603138,"y":5.944514343109248},{"x":9.900000147521496,"y":6.001456818784052}]}],"marks":[{"type":"symbol","from":{"data":"a2b8f73c-641e-4510-9657-ead3321f1acf"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"73022065-55df-4ea8-8d33-904f3e8e2466"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"73022065-55df-4ea8-8d33-904f3e8e2466\", :values ({:x 0, :y 5.160059997684871} {:x 0.10000000149011612, :y -20.750241033296117} {:x 0.20000000298023224, :y -2.709933249167006} {:x 0.30000000447034836, :y -1.1561147552879691} {:x 0.4000000059604645, :y -0.5434975485767347} {:x 0.5000000074505806, :y -0.19684280006394428} {:x 0.6000000089406967, :y 0.03783313116636178} {:x 0.7000000104308128, :y 0.21487449672906633} {:x 0.800000011920929, :y 0.35835710137625} {:x 0.9000000134110451, :y 0.4805860961768178} {:x 1.0000000149011612, :y 0.5885058667105101} {:x 1.1000000163912773, :y 0.6863325986075423} {:x 1.2000000178813934, :y 0.7767742240916324} {:x 1.3000000193715096, :y 0.861649490407166} {:x 1.4000000208616257, :y 0.9422252415089843} {:x 1.5000000223517418, :y 1.0194110018324272} {:x 1.600000023841858, :y 1.0938766577768457} {:x 1.700000025331974, :y 1.166126503993939} {:x 1.8000000268220901, :y 1.2365474319698246} {:x 1.9000000283122063, :y 1.3054412162168032} {:x 2.0000000298023224, :y 1.373046701371511} {:x 2.1000000312924385, :y 1.439555393069631} {:x 2.2000000327825546, :y 1.505122632483611} {:x 2.3000000342726707, :y 1.5698757482148749} {:x 2.400000035762787, :y 1.6339200982680555} {:x 2.500000037252903, :y 1.697343612877547} {:x 2.600000038743019, :y 1.760220254919957} {:x 2.7000000402331352, :y 1.8226126873098911} {:x 2.8000000417232513, :y 1.8845743516021152} {:x 2.9000000432133675, :y 1.9461511040497699} {:x 3.0000000447034836, :y 2.0073825152747005} {:x 3.1000000461935997, :y 2.0683029115680385} {:x 3.200000047683716, :y 2.1289422158227462} {:x 3.300000049173832, :y 2.1893266316812454} {:x 3.400000050663948, :y 2.249479203973486} {:x 3.500000052154064, :y 2.3094202807797264} {:x 3.6000000536441803, :y 2.369167896691504} {:x 3.7000000551342964, :y 2.4287380925164497} {:x 3.8000000566244125, :y 2.4881451833923403} {:x 3.9000000581145287, :y 2.5474019847687486} {:x 4.000000059604645, :y 2.606520003783449} {:x 4.100000061094761, :y 2.665509602062131} {:x 4.200000062584877, :y 2.7243801347988446} {:x 4.300000064074993, :y 2.7831400700533653} {:x 4.400000065565109, :y 2.8417970914724333} {:x 4.500000067055225, :y 2.900358187061142} {:x 4.6000000685453415, :y 2.958829726165722} {:x 4.700000070035458, :y 3.0172175264545826} {:x 4.800000071525574, :y 3.07552691238151} {:x 4.90000007301569, :y 3.1337627663685015} {:x 5.000000074505806, :y 3.191929573744473} {:x 5.100000075995922, :y 3.250031462310833} {:x 5.200000077486038, :y 3.308072237268805} {:x 5.300000078976154, :y 3.366055412130704} {:x 5.4000000804662704, :y 3.423984236143771} {:x 5.500000081956387, :y 3.481861718677133} {:x 5.600000083446503, :y 3.539690650957123} {:x 5.700000084936619, :y 3.5974736254813475} {:x 5.800000086426735, :y 3.6552130533956535} {:x 5.900000087916851, :y 3.7129111800790966} {:x 6.000000089406967, :y 3.770570099148857} {:x 6.100000090897083, :y 3.8281917650688935} {:x 6.200000092387199, :y 3.885778004522083} {:x 6.3000000938773155, :y 3.943330526685043} {:x 6.400000095367432, :y 4.000850932527219} {:x 6.500000096857548, :y 4.058340723240638} {:x 6.600000098347664, :y 4.115801307893717} {:x 6.70000009983778, :y 4.17323401039116} {:x 6.800000101327896, :y 4.230640075812282} {:x 6.900000102818012, :y 4.28802067619155} {:x 7.000000104308128, :y 4.345376915797794} {:x 7.1000001057982445, :y 4.402709835962078} {:x 7.200000107288361, :y 4.46002041949863} {:x 7.300000108778477, :y 4.517309594758283} {:x 7.400000110268593, :y 4.574578239349591} {:x 7.500000111758709, :y 4.631827183558959} {:x 7.600000113248825, :y 4.689057213497835} {:x 7.700000114738941, :y 4.746269074002031} {:x 7.800000116229057, :y 4.803463471305644} {:x 7.900000117719173, :y 4.860641075509782} {:x 8.00000011920929, :y 4.917802522864214} {:x 8.100000120699406, :y 4.974948417878285} {:x 8.200000122189522, :y 5.032079335275823} {:x 8.300000123679638, :y 5.089195821807303} {:x 8.400000125169754, :y 5.146298397931325} {:x 8.50000012665987, :y 5.203387559376217} {:x 8.600000128149986, :y 5.260463778591659} {:x 8.700000129640102, :y 5.317527506099243} {:x 8.800000131130219, :y 5.37457917175008} {:x 8.900000132620335, :y 5.431619185896838} {:x 9.00000013411045, :y 5.488647940486933} {:x 9.100000135600567, :y 5.545665810082981} {:x 9.200000137090683, :y 5.602673152816105} {:x 9.300000138580799, :y 5.659670311277191} {:x 9.400000140070915, :y 5.716657613350756} {:x 9.500000141561031, :y 5.773635372995691} {:x 9.600000143051147, :y 5.830603890976795} {:x 9.700000144541264, :y 5.887563455550667} {:x 9.80000014603138, :y 5.944514343109248} {:x 9.900000147521496, :y 6.001456818784052})}), :marks ({:type \"symbol\", :from {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"73022065-55df-4ea8-8d33-904f3e8e2466\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"},{"type":"html","content":"<span class='clj-double'>-1465.9915358667167</span>","value":"-1465.9915358667167"}],"value":"[#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"73022065-55df-4ea8-8d33-904f3e8e2466\", :values ({:x 0, :y 5.160059997684871} {:x 0.10000000149011612, :y -20.750241033296117} {:x 0.20000000298023224, :y -2.709933249167006} {:x 0.30000000447034836, :y -1.1561147552879691} {:x 0.4000000059604645, :y -0.5434975485767347} {:x 0.5000000074505806, :y -0.19684280006394428} {:x 0.6000000089406967, :y 0.03783313116636178} {:x 0.7000000104308128, :y 0.21487449672906633} {:x 0.800000011920929, :y 0.35835710137625} {:x 0.9000000134110451, :y 0.4805860961768178} {:x 1.0000000149011612, :y 0.5885058667105101} {:x 1.1000000163912773, :y 0.6863325986075423} {:x 1.2000000178813934, :y 0.7767742240916324} {:x 1.3000000193715096, :y 0.861649490407166} {:x 1.4000000208616257, :y 0.9422252415089843} {:x 1.5000000223517418, :y 1.0194110018324272} {:x 1.600000023841858, :y 1.0938766577768457} {:x 1.700000025331974, :y 1.166126503993939} {:x 1.8000000268220901, :y 1.2365474319698246} {:x 1.9000000283122063, :y 1.3054412162168032} {:x 2.0000000298023224, :y 1.373046701371511} {:x 2.1000000312924385, :y 1.439555393069631} {:x 2.2000000327825546, :y 1.505122632483611} {:x 2.3000000342726707, :y 1.5698757482148749} {:x 2.400000035762787, :y 1.6339200982680555} {:x 2.500000037252903, :y 1.697343612877547} {:x 2.600000038743019, :y 1.760220254919957} {:x 2.7000000402331352, :y 1.8226126873098911} {:x 2.8000000417232513, :y 1.8845743516021152} {:x 2.9000000432133675, :y 1.9461511040497699} {:x 3.0000000447034836, :y 2.0073825152747005} {:x 3.1000000461935997, :y 2.0683029115680385} {:x 3.200000047683716, :y 2.1289422158227462} {:x 3.300000049173832, :y 2.1893266316812454} {:x 3.400000050663948, :y 2.249479203973486} {:x 3.500000052154064, :y 2.3094202807797264} {:x 3.6000000536441803, :y 2.369167896691504} {:x 3.7000000551342964, :y 2.4287380925164497} {:x 3.8000000566244125, :y 2.4881451833923403} {:x 3.9000000581145287, :y 2.5474019847687486} {:x 4.000000059604645, :y 2.606520003783449} {:x 4.100000061094761, :y 2.665509602062131} {:x 4.200000062584877, :y 2.7243801347988446} {:x 4.300000064074993, :y 2.7831400700533653} {:x 4.400000065565109, :y 2.8417970914724333} {:x 4.500000067055225, :y 2.900358187061142} {:x 4.6000000685453415, :y 2.958829726165722} {:x 4.700000070035458, :y 3.0172175264545826} {:x 4.800000071525574, :y 3.07552691238151} {:x 4.90000007301569, :y 3.1337627663685015} {:x 5.000000074505806, :y 3.191929573744473} {:x 5.100000075995922, :y 3.250031462310833} {:x 5.200000077486038, :y 3.308072237268805} {:x 5.300000078976154, :y 3.366055412130704} {:x 5.4000000804662704, :y 3.423984236143771} {:x 5.500000081956387, :y 3.481861718677133} {:x 5.600000083446503, :y 3.539690650957123} {:x 5.700000084936619, :y 3.5974736254813475} {:x 5.800000086426735, :y 3.6552130533956535} {:x 5.900000087916851, :y 3.7129111800790966} {:x 6.000000089406967, :y 3.770570099148857} {:x 6.100000090897083, :y 3.8281917650688935} {:x 6.200000092387199, :y 3.885778004522083} {:x 6.3000000938773155, :y 3.943330526685043} {:x 6.400000095367432, :y 4.000850932527219} {:x 6.500000096857548, :y 4.058340723240638} {:x 6.600000098347664, :y 4.115801307893717} {:x 6.70000009983778, :y 4.17323401039116} {:x 6.800000101327896, :y 4.230640075812282} {:x 6.900000102818012, :y 4.28802067619155} {:x 7.000000104308128, :y 4.345376915797794} {:x 7.1000001057982445, :y 4.402709835962078} {:x 7.200000107288361, :y 4.46002041949863} {:x 7.300000108778477, :y 4.517309594758283} {:x 7.400000110268593, :y 4.574578239349591} {:x 7.500000111758709, :y 4.631827183558959} {:x 7.600000113248825, :y 4.689057213497835} {:x 7.700000114738941, :y 4.746269074002031} {:x 7.800000116229057, :y 4.803463471305644} {:x 7.900000117719173, :y 4.860641075509782} {:x 8.00000011920929, :y 4.917802522864214} {:x 8.100000120699406, :y 4.974948417878285} {:x 8.200000122189522, :y 5.032079335275823} {:x 8.300000123679638, :y 5.089195821807303} {:x 8.400000125169754, :y 5.146298397931325} {:x 8.50000012665987, :y 5.203387559376217} {:x 8.600000128149986, :y 5.260463778591659} {:x 8.700000129640102, :y 5.317527506099243} {:x 8.800000131130219, :y 5.37457917175008} {:x 8.900000132620335, :y 5.431619185896838} {:x 9.00000013411045, :y 5.488647940486933} {:x 9.100000135600567, :y 5.545665810082981} {:x 9.200000137090683, :y 5.602673152816105} {:x 9.300000138580799, :y 5.659670311277191} {:x 9.400000140070915, :y 5.716657613350756} {:x 9.500000141561031, :y 5.773635372995691} {:x 9.600000143051147, :y 5.830603890976795} {:x 9.700000144541264, :y 5.887563455550667} {:x 9.80000014603138, :y 5.944514343109248} {:x 9.900000147521496, :y 6.001456818784052})}), :marks ({:type \"symbol\", :from {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"73022065-55df-4ea8-8d33-904f3e8e2466\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1465.9915358667167]"}],"value":"#gorilla_repl.table.TableView{:contents ([#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"58a1ff5c-38bd-412e-a370-cbb0bda40927\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"33f6773c-498e-440a-982a-7ae93bbe4741\", :values ({:x 0, :y 0.3122933651163702} {:x 0.10000000149011612, :y 0.23898257849108556} {:x 0.20000000298023224, :y 0.20567179305789382} {:x 0.30000000447034836, :y 0.21236100881679498} {:x 0.4000000059604645, :y 0.2590502257677891} {:x 0.5000000074505806, :y 0.3457394439108761} {:x 0.6000000089406967, :y 0.4724286632460559} {:x 0.7000000104308128, :y 0.6391178837733287} {:x 0.800000011920929, :y 0.8458071054926944} {:x 0.9000000134110451, :y 1.0924963284041531} {:x 1.0000000149011612, :y 1.3791855525077046} {:x 1.1000000163912773, :y 1.705874777803349} {:x 1.2000000178813934, :y 2.0725640042910864} {:x 1.3000000193715096, :y 2.4792532319709166} {:x 1.4000000208616257, :y 2.9259424608428395} {:x 1.5000000223517418, :y 3.4126316909068555} {:x 1.600000023841858, :y 3.9393209221629646} {:x 1.700000025331974, :y 4.506010154611166} {:x 1.8000000268220901, :y 5.112699388251461} {:x 1.9000000283122063, :y 5.759388623083849} {:x 2.0000000298023224, :y 6.446077859108328} {:x 2.1000000312924385, :y 7.172767096324902} {:x 2.2000000327825546, :y 7.939456334733569} {:x 2.3000000342726707, :y 8.746145574334328} {:x 2.400000035762787, :y 9.59283481512718} {:x 2.500000037252903, :y 10.479524057112126} {:x 2.600000038743019, :y 11.406213300289163} {:x 2.7000000402331352, :y 12.372902544658295} {:x 2.8000000417232513, :y 13.37959179021952} {:x 2.9000000432133675, :y 14.426281036972835} {:x 3.0000000447034836, :y 15.512970284918243} {:x 3.1000000461935997, :y 16.63965953405575} {:x 3.200000047683716, :y 17.806348784385342} {:x 3.300000049173832, :y 19.01303803590703} {:x 3.400000050663948, :y 20.259727288620812} {:x 3.500000052154064, :y 21.546416542526686} {:x 3.6000000536441803, :y 22.873105797624653} {:x 3.7000000551342964, :y 24.239795053914712} {:x 3.8000000566244125, :y 25.64648431139687} {:x 3.9000000581145287, :y 27.093173570071112} {:x 4.000000059604645, :y 28.579862829937454} {:x 4.100000061094761, :y 30.106552090995883} {:x 4.200000062584877, :y 31.673241353246404} {:x 4.300000064074993, :y 33.27993061668902} {:x 4.400000065565109, :y 34.92661988132373} {:x 4.500000067055225, :y 36.61330914715054} {:x 4.6000000685453415, :y 38.339998414169436} {:x 4.700000070035458, :y 40.10668768238042} {:x 4.800000071525574, :y 41.9133769517835} {:x 4.90000007301569, :y 43.76006622237868} {:x 5.000000074505806, :y 45.646755494165944} {:x 5.100000075995922, :y 47.573444767145304} {:x 5.200000077486038, :y 49.54013404131676} {:x 5.300000078976154, :y 51.5468233166803} {:x 5.4000000804662704, :y 53.59351259323595} {:x 5.500000081956387, :y 55.68020187098368} {:x 5.600000083446503, :y 57.80689114992351} {:x 5.700000084936619, :y 59.973580430055414} {:x 5.800000086426735, :y 62.18026971137944} {:x 5.900000087916851, :y 64.42695899389554} {:x 6.000000089406967, :y 66.71364827760374} {:x 6.100000090897083, :y 69.04033756250402} {:x 6.200000092387199, :y 71.4070268485964} {:x 6.3000000938773155, :y 73.81371613588088} {:x 6.400000095367432, :y 76.26040542435744} {:x 6.500000096857548, :y 78.7470947140261} {:x 6.600000098347664, :y 81.27378400488686} {:x 6.70000009983778, :y 83.84047329693972} {:x 6.800000101327896, :y 86.44716259018466} {:x 6.900000102818012, :y 89.09385188462169} {:x 7.000000104308128, :y 91.78054118025081} {:x 7.1000001057982445, :y 94.50723047707203} {:x 7.200000107288361, :y 97.27391977508533} {:x 7.300000108778477, :y 100.08060907429073} {:x 7.400000110268593, :y 102.92729837468823} {:x 7.500000111758709, :y 105.81398767627783} {:x 7.600000113248825, :y 108.74067697905951} {:x 7.700000114738941, :y 111.7073662830333} {:x 7.800000116229057, :y 114.71405558819917} {:x 7.900000117719173, :y 117.76074489455715} {:x 8.00000011920929, :y 120.8474342021072} {:x 8.100000120699406, :y 123.97412351084932} {:x 8.200000122189522, :y 127.14081282078357} {:x 8.300000123679638, :y 130.34750213190992} {:x 8.400000125169754, :y 133.59419144422833} {:x 8.50000012665987, :y 136.88088075773885} {:x 8.600000128149986, :y 140.20757007244146} {:x 8.700000129640102, :y 143.57425938833617} {:x 8.800000131130219, :y 146.98094870542297} {:x 8.900000132620335, :y 150.42763802370186} {:x 9.00000013411045, :y 153.91432734317283} {:x 9.100000135600567, :y 157.44101666383594} {:x 9.200000137090683, :y 161.0077059856911} {:x 9.300000138580799, :y 164.61439530873838} {:x 9.400000140070915, :y 168.2610846329777} {:x 9.500000141561031, :y 171.94777395840916} {:x 9.600000143051147, :y 175.67446328503272} {:x 9.700000144541264, :y 179.44115261284836} {:x 9.80000014603138, :y 183.24784194185608} {:x 9.900000147521496, :y 187.0945312720559})}), :marks ({:type \"symbol\", :from {:data \"58a1ff5c-38bd-412e-a370-cbb0bda40927\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"33f6773c-498e-440a-982a-7ae93bbe4741\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -368.0239659672526] [#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"52b22ffb-ae67-46ee-878c-5e262aa71420\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"36a71740-1780-46fb-9967-cac0e0e88208\", :values ({:x 0, :y 0.5131983895922749} {:x 0.10000000149011612, :y 0.43861756016504194} {:x 0.20000000298023224, :y 0.37863091909458285} {:x 0.30000000447034836, :y 0.3293364927276776} {:x 0.4000000059604645, :y 0.2881094843575956} {:x 0.5000000074505806, :y 0.25311924963432475} {:x 0.6000000089406967, :y 0.22305007092748283} {:x 0.7000000104308128, :y 0.19693200301230385} {:x 0.800000011920929, :y 0.1740342888584139} {:x 0.9000000134110451, :y 0.1537959114365592} {:x 1.0000000149011612, :y 0.1357790146237018} {:x 1.1000000163912773, :y 0.11963686445925774} {:x 1.2000000178813934, :y 0.10509131715528491} {:x 1.3000000193715096, :y 0.09191665788831899} {:x 1.4000000208616257, :y 0.07992780343197439} {:x 1.5000000223517418, :y 0.06897155312345085} {:x 1.600000023841858, :y 0.058920007165150605} {:x 1.700000025331974, :y 0.04966555071610354} {:x 1.8000000268220901, :y 0.041116985761400084} {:x 1.9000000283122063, :y 0.033196515599349885} {:x 2.0000000298023224, :y 0.02583737045831004} {:x 2.1000000312924385, :y 0.01898192065617578} {:x 2.2000000327825546, :y 0.01258016437306241} {:x 2.3000000342726707, :y 0.006588506044859765} {:x 2.400000035762787, :y 9.687622396390421E-4} {:x 2.500000037252903, :y -0.004312652916565995} {:x 2.600000038743019, :y -0.009285399492332945} {:x 2.7000000402331352, :y -0.013975769067182493} {:x 2.8000000417232513, :y -0.01840714972762467} {:x 2.9000000432133675, :y -0.022600416105393966} {:x 3.0000000447034836, :y -0.026574258186184932} {:x 3.1000000461935997, :y -0.03034545981698076} {:x 3.200000047683716, :y -0.03392913566643509} {:x 3.300000049173832, :y -0.037338933693722653} {:x 3.400000050663948, :y -0.040587208844410104} {:x 3.500000052154064, :y -0.043685172633409} {:x 3.6000000536441803, :y -0.04664302243201924} {:x 3.7000000551342964, :y -0.049470053600801776} {:x 3.8000000566244125, :y -0.05217475706623738} {:x 3.9000000581145287, :y -0.05476490449898895} {:x 4.000000059604645, :y -0.057247622893595126} {:x 4.100000061094761, :y -0.05962946005688951} {:x 4.200000062584877, :y -0.06191644227233266} {:x 4.300000064074993, :y -0.06411412520952557} {:x 4.400000065565109, :y -0.0662276389843658} {:x 4.500000067055225, :y -0.06826172813919934} {:x 4.6000000685453415, :y -0.07022078719881006} {:x 4.700000070035458, :y -0.0721088923630694} {:x 4.800000071525574, :y -0.07392982981727095} {:x 4.90000007301569, :y -0.07568712107391944} {:x 5.000000074505806, :y -0.0773840457028895} {:x 5.100000075995922, :y -0.07902366175865425} {:x 5.200000077486038, :y -0.08060882417227468} {:x 5.300000078976154, :y -0.08214220134086006} {:x 5.4000000804662704, :y -0.08362629011728942} {:x 5.500000081956387, :y -0.0850634293773216} {:x 5.600000083446503, :y -0.08645581231915962} {:x 5.700000084936619, :y -0.0878054976315098} {:x 5.800000086426735, :y -0.08911441964974594} {:x 5.900000087916851, :y -0.09038439760555117} {:x 6.000000089406967, :y -0.09161714406305423} {:x 6.100000090897083, :y -0.0928142726237268} {:x 6.200000092387199, :y -0.09397730497293601} {:x 6.3000000938773155, :y -0.09510767733285826} {:x 6.400000095367432, :y -0.09620674637929248} {:x 6.500000096857548, :y -0.09727579467362633} {:x 6.600000098347664, :y -0.09831603565568084} {:x 6.70000009983778, :y -0.09932861823829943} {:x 6.800000101327896, :y -0.10031463104025613} {:x 6.900000102818012, :y -0.10127510629026916} {:x 7.000000104308128, :y -0.10221102343155274} {:x 7.1000001057982445, :y -0.10312331245336744} {:x 7.200000107288361, :y -0.104012856973393} {:x 7.300000108778477, :y -0.10488049709239469} {:x 7.400000110268593, :y -0.10572703204057547} {:x 7.500000111758709, :y -0.10655322263312923} {:x 7.600000113248825, :y -0.10735979355086037} {:x 7.700000114738941, :y -0.10814743546023167} {:x 7.800000116229057, :y -0.10891680698588387} {:x 7.900000117719173, :y -0.10966853654746019} {:x 8.00000011920929, :y -0.11040322407150827} {:x 8.100000120699406, :y -0.11112144258825819} {:x 8.200000122189522, :y -0.11182373972220704} {:x 8.300000123679638, :y -0.11251063908466377} {:x 8.400000125169754, :y -0.11318264157569016} {:x 8.50000012665987, :y -0.11384022660224734} {:x 8.600000128149986, :y -0.1144838532187673} {:x 8.700000129640102, :y -0.11511396119585843} {:x 8.800000131130219, :y -0.11573097202236696} {:x 8.900000132620335, :y -0.11633528984559804} {:x 9.00000013411045, :y -0.11692730235410147} {:x 9.100000135600567, :y -0.11750738160707225} {:x 9.200000137090683, :y -0.11807588481409959} {:x 9.300000138580799, :y -0.11863315506869217} {:x 9.400000140070915, :y -0.11917952203875083} {:x 9.500000141561031, :y -0.1197153026169027} {:x 9.600000143051147, :y -0.12024080153339832} {:x 9.700000144541264, :y -0.12075631193405684} {:x 9.80000014603138, :y -0.12126211592556702} {:x 9.900000147521496, :y -0.12175848509027357})}), :marks ({:type \"symbol\", :from {:data \"52b22ffb-ae67-46ee-878c-5e262aa71420\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"36a71740-1780-46fb-9967-cac0e0e88208\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1521.2505633250257] [#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\", :values ({:x 0, :y -0.3338034205636063} {:x 0.10000000149011612, :y -0.3200359993794256} {:x 0.20000000298023224, :y -0.3004215054013975} {:x 0.30000000447034836, :y -0.27557804754510284} {:x 0.4000000059604645, :y -0.24612373472612226} {:x 0.5000000074505806, :y -0.2126766758600366} {:x 0.6000000089406967, :y -0.17585497986242657} {:x 0.7000000104308128, :y -0.13627675564887284} {:x 0.800000011920929, :y -0.09456011213495619} {:x 0.9000000134110451, :y -0.051323158236257424} {:x 1.0000000149011612, :y -0.0071840028683571745} {:x 1.1000000163912773, :y 0.03723924505316374} {:x 1.2000000178813934, :y 0.08132847661272466} {:x 1.3000000193715096, :y 0.12446558289474474} {:x 1.4000000208616257, :y 0.16603245498364327} {:x 1.5000000223517418, :y 0.20541098396383953} {:x 1.600000023841858, :y 0.24198306091975275} {:x 1.700000025331974, :y 0.27513057693580256} {:x 1.8000000268220901, :y 0.30423542309640755} {:x 1.9000000283122063, :y 0.32867949048598727} {:x 2.0000000298023224, :y 0.34784467018896104} {:x 2.1000000312924385, :y 0.361112853289748} {:x 2.2000000327825546, :y 0.36786593087276837} {:x 2.3000000342726707, :y 0.3674857940224388} {:x 2.400000035762787, :y 0.35935433382318216} {:x 2.500000037252903, :y 0.3428534413594149} {:x 2.600000038743019, :y 0.31736500771555715} {:x 2.7000000402331352, :y 0.28227092397602827} {:x 2.8000000417232513, :y 0.23695308122524741} {:x 2.9000000432133675, :y 0.1807933705476339} {:x 3.0000000447034836, :y 0.11317368302760691} {:x 3.1000000461935997, :y 0.033475909749585815} {:x 3.200000047683716, :y -0.05891805820201019} {:x 3.300000049173832, :y -0.16462632974276184} {:x 3.400000050663948, :y -0.2842670137882452} {:x 3.500000052154064, :y -0.4184582192540501} {:x 3.6000000536441803, :y -0.5678180550557528} {:x 3.7000000551342964, :y -0.7329646301089341} {:x 3.8000000566244125, :y -0.9145160533291747} {:x 3.9000000581145287, :y -1.1130904336320555} {:x 4.000000059604645, :y -1.3293058799331572} {:x 4.100000061094761, :y -1.5637805011480603} {:x 4.200000062584877, :y -1.8171324061923457} {:x 4.300000064074993, :y -2.089979703981587} {:x 4.400000065565109, :y -2.3829405034313784} {:x 4.500000067055225, :y -2.6966329134573033} {:x 4.6000000685453415, :y -3.031675042974926} {:x 4.700000070035458, :y -3.3886850008998337} {:x 4.800000071525574, :y -3.7682808961475893} {:x 4.90000007301569, :y -4.171080837633811} {:x 5.000000074505806, :y -4.597702934274061} {:x 5.100000075995922, :y -5.0487652949839195} {:x 5.200000077486038, :y -5.524886028678968} {:x 5.300000078976154, :y -6.026683244274787} {:x 5.4000000804662704, :y -6.554775050686957} {:x 5.500000081956387, :y -7.10977955683106} {:x 5.600000083446503, :y -7.692314871622674} {:x 5.700000084936619, :y -8.302999103977383} {:x 5.800000086426735, :y -8.942450362810767} {:x 5.900000087916851, :y -9.611286757038403} {:x 6.000000089406967, :y -10.310126395575876} {:x 6.100000090897083, :y -11.039587387338766} {:x 6.200000092387199, :y -11.800287841242652} {:x 6.3000000938773155, :y -12.592845866203117} {:x 6.400000095367432, :y -13.41787957113574} {:x 6.500000096857548, :y -14.276007064956103} {:x 6.600000098347664, :y -15.167846456579785} {:x 6.70000009983778, :y -16.09401585492233} {:x 6.800000101327896, :y -17.055133368899394} {:x 6.900000102818012, :y -18.05181710742652} {:x 7.000000104308128, :y -19.084685179419292} {:x 7.1000001057982445, :y -20.154355693793285} {:x 7.200000107288361, :y -21.26144675946408} {:x 7.300000108778477, :y -22.406576485347262} {:x 7.400000110268593, :y -23.590362980358414} {:x 7.500000111758709, :y -24.813424353413108} {:x 7.600000113248825, :y -26.07637871342693} {:x 7.700000114738941, :y -27.37984416931546} {:x 7.800000116229057, :y -28.724438829994284} {:x 7.900000117719173, :y -30.110780804378972} {:x 8.00000011920929, :y -31.539488201385115} {:x 8.100000120699406, :y -33.01117912992829} {:x 8.200000122189522, :y -34.52647169892407} {:x 8.300000123679638, :y -36.08598401728805} {:x 8.400000125169754, :y -37.69033419393573} {:x 8.50000012665987, :y -39.340140337782834} {:x 8.600000128149986, :y -41.03602055774481} {:x 8.700000129640102, :y -42.77859296273736} {:x 8.800000131130219, :y -44.56847566167601} {:x 8.900000132620335, :y -46.40628676347634} {:x 9.00000013411045, :y -48.29264437705399} {:x 9.100000135600567, :y -50.22816661132434} {:x 9.200000137090683, :y -52.213471575203265} {:x 9.300000138580799, :y -54.249177377606024} {:x 9.400000140070915, :y -56.33590212744852} {:x 9.500000141561031, :y -58.47426393364603} {:x 9.600000143051147, :y -60.66488090511427} {:x 9.700000144541264, :y -62.90837115076901} {:x 9.80000014603138, :y -65.20535277952547} {:x 9.900000147521496, :y -67.5564439002996})}), :marks ({:type \"symbol\", :from {:data \"0b93e023-7fbd-4f38-8a2d-7e87f3c13db1\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"0d7cc6bc-f977-4abe-9eb1-8dc3f5deae5f\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1781.8270259859582] [#gorilla_repl.vega.VegaView{:content {:width 200, :height 100.0, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"a2b8f73c-641e-4510-9657-ead3321f1acf\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"73022065-55df-4ea8-8d33-904f3e8e2466\", :values ({:x 0, :y 5.160059997684871} {:x 0.10000000149011612, :y -20.750241033296117} {:x 0.20000000298023224, :y -2.709933249167006} {:x 0.30000000447034836, :y -1.1561147552879691} {:x 0.4000000059604645, :y -0.5434975485767347} {:x 0.5000000074505806, :y -0.19684280006394428} {:x 0.6000000089406967, :y 0.03783313116636178} {:x 0.7000000104308128, :y 0.21487449672906633} {:x 0.800000011920929, :y 0.35835710137625} {:x 0.9000000134110451, :y 0.4805860961768178} {:x 1.0000000149011612, :y 0.5885058667105101} {:x 1.1000000163912773, :y 0.6863325986075423} {:x 1.2000000178813934, :y 0.7767742240916324} {:x 1.3000000193715096, :y 0.861649490407166} {:x 1.4000000208616257, :y 0.9422252415089843} {:x 1.5000000223517418, :y 1.0194110018324272} {:x 1.600000023841858, :y 1.0938766577768457} {:x 1.700000025331974, :y 1.166126503993939} {:x 1.8000000268220901, :y 1.2365474319698246} {:x 1.9000000283122063, :y 1.3054412162168032} {:x 2.0000000298023224, :y 1.373046701371511} {:x 2.1000000312924385, :y 1.439555393069631} {:x 2.2000000327825546, :y 1.505122632483611} {:x 2.3000000342726707, :y 1.5698757482148749} {:x 2.400000035762787, :y 1.6339200982680555} {:x 2.500000037252903, :y 1.697343612877547} {:x 2.600000038743019, :y 1.760220254919957} {:x 2.7000000402331352, :y 1.8226126873098911} {:x 2.8000000417232513, :y 1.8845743516021152} {:x 2.9000000432133675, :y 1.9461511040497699} {:x 3.0000000447034836, :y 2.0073825152747005} {:x 3.1000000461935997, :y 2.0683029115680385} {:x 3.200000047683716, :y 2.1289422158227462} {:x 3.300000049173832, :y 2.1893266316812454} {:x 3.400000050663948, :y 2.249479203973486} {:x 3.500000052154064, :y 2.3094202807797264} {:x 3.6000000536441803, :y 2.369167896691504} {:x 3.7000000551342964, :y 2.4287380925164497} {:x 3.8000000566244125, :y 2.4881451833923403} {:x 3.9000000581145287, :y 2.5474019847687486} {:x 4.000000059604645, :y 2.606520003783449} {:x 4.100000061094761, :y 2.665509602062131} {:x 4.200000062584877, :y 2.7243801347988446} {:x 4.300000064074993, :y 2.7831400700533653} {:x 4.400000065565109, :y 2.8417970914724333} {:x 4.500000067055225, :y 2.900358187061142} {:x 4.6000000685453415, :y 2.958829726165722} {:x 4.700000070035458, :y 3.0172175264545826} {:x 4.800000071525574, :y 3.07552691238151} {:x 4.90000007301569, :y 3.1337627663685015} {:x 5.000000074505806, :y 3.191929573744473} {:x 5.100000075995922, :y 3.250031462310833} {:x 5.200000077486038, :y 3.308072237268805} {:x 5.300000078976154, :y 3.366055412130704} {:x 5.4000000804662704, :y 3.423984236143771} {:x 5.500000081956387, :y 3.481861718677133} {:x 5.600000083446503, :y 3.539690650957123} {:x 5.700000084936619, :y 3.5974736254813475} {:x 5.800000086426735, :y 3.6552130533956535} {:x 5.900000087916851, :y 3.7129111800790966} {:x 6.000000089406967, :y 3.770570099148857} {:x 6.100000090897083, :y 3.8281917650688935} {:x 6.200000092387199, :y 3.885778004522083} {:x 6.3000000938773155, :y 3.943330526685043} {:x 6.400000095367432, :y 4.000850932527219} {:x 6.500000096857548, :y 4.058340723240638} {:x 6.600000098347664, :y 4.115801307893717} {:x 6.70000009983778, :y 4.17323401039116} {:x 6.800000101327896, :y 4.230640075812282} {:x 6.900000102818012, :y 4.28802067619155} {:x 7.000000104308128, :y 4.345376915797794} {:x 7.1000001057982445, :y 4.402709835962078} {:x 7.200000107288361, :y 4.46002041949863} {:x 7.300000108778477, :y 4.517309594758283} {:x 7.400000110268593, :y 4.574578239349591} {:x 7.500000111758709, :y 4.631827183558959} {:x 7.600000113248825, :y 4.689057213497835} {:x 7.700000114738941, :y 4.746269074002031} {:x 7.800000116229057, :y 4.803463471305644} {:x 7.900000117719173, :y 4.860641075509782} {:x 8.00000011920929, :y 4.917802522864214} {:x 8.100000120699406, :y 4.974948417878285} {:x 8.200000122189522, :y 5.032079335275823} {:x 8.300000123679638, :y 5.089195821807303} {:x 8.400000125169754, :y 5.146298397931325} {:x 8.50000012665987, :y 5.203387559376217} {:x 8.600000128149986, :y 5.260463778591659} {:x 8.700000129640102, :y 5.317527506099243} {:x 8.800000131130219, :y 5.37457917175008} {:x 8.900000132620335, :y 5.431619185896838} {:x 9.00000013411045, :y 5.488647940486933} {:x 9.100000135600567, :y 5.545665810082981} {:x 9.200000137090683, :y 5.602673152816105} {:x 9.300000138580799, :y 5.659670311277191} {:x 9.400000140070915, :y 5.716657613350756} {:x 9.500000141561031, :y 5.773635372995691} {:x 9.600000143051147, :y 5.830603890976795} {:x 9.700000144541264, :y 5.887563455550667} {:x 9.80000014603138, :y 5.944514343109248} {:x 9.900000147521496, :y 6.001456818784052})}), :marks ({:type \"symbol\", :from {:data \"a2b8f73c-641e-4510-9657-ead3321f1acf\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"73022065-55df-4ea8-8d33-904f3e8e2466\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}} -1465.9915358667167]), :opts (:columns [#gorilla_repl.html.HtmlView{:content \"Plot\"} #gorilla_repl.html.HtmlView{:content \"Score\"}])}"}
;; <=

;; **
;;; That looks like it does kind of the right thing - the curves that lie closer to the data have higher (less negative) scores.
;;; 
;;; We're going to add another bit to the score. At the moment, our score will drive the genetic algorithm to find expressions that fit the data. But we'll quickly run in to a big problem with symbolic regression: bloat. If there's nothing to stop our algorithm from evolving arbitrarily complex expressions, then that's precisely what it'll do! We'll find that our algorithm bogs down, and we end up with solutions too complicated to be meaningful. There are many ways to combat this, but a simple approach is to introduce what's known as "parsimony pressure". This is a fancy way of saying we'll add a bit to the score to penalise complicated solutions. Or to put it differently, we'll ask the genetic algorithm to find us _simple_ expressions that fit the data.
;;; 
;;; This simple, modified score function penalises the expression according to the number of nodes it has.
;; **

;; @@
(defn count-nodes
  [ex]
  (if (seq? ex)
  	(+ 1 (apply + (map count-nodes (rest ex))))
    1))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/count-nodes</span>","value":"#'sr-basis/count-nodes"}
;; <=

;; @@
(defn score-pp
  [data ex pressure-coeff]
  (+ (score data ex) (* pressure-coeff (count-nodes ex))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/score-pp</span>","value":"#'sr-basis/score-pp"}
;; <=

;; **
;;; ## Genetic operations
;;; 
;;; The final ingredient we need before we can pull it all together is a way to make new expressions from existing ones.
;;; 
;;; The first mechanism for doing this is mutation. There are a number of ways of doing this, and as usual we'll go for something simple. First up, helpers. We'll want to be able to act on a randomly chosen part of a tree. We'll specify a location in a tree by numbering the nodes, following a depth-first walk. We'll use the `clojure.zip` library to do the tree manipulation. We define a zipper-constructor for expressions, that will treat the expression in the way we'd expect (namely, that branch nodes are functions). You might need to revise the `clojure.zip` documentation to make sense of this function.
;; **

;; @@
(defn expr-zip
  [expr]
  (zip/zipper
    (constantly true)
    (fn [node]
      (if (seq? node) 
                 (rest node) 
                 nil))
    (fn [node children] (with-meta (conj children (first node)) (meta node)))
    expr))
 
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/expr-zip</span>","value":"#'sr-basis/expr-zip"}
;; <=

;; **
;;; $$---Joel---$$
;;; 
;;; $$\textbf{zip/zipper} $$
;;; - A zipper is a data structure representing a location in a hierarchical data structure, and the path it took to get there. It provides down/up/left/right navigation, and localized functional 'editing’, insertion and removal of nodes. With zippers you can write code that looks like an imperative, destructive walk through a tree, call root when you are done and get a new tree reflecting all the changes, when in fact nothing at all is mutated - it’s all thread safe and shareable. The next function does a depth-first walk, making for easy to understand loops.
;;; 
;;; http://www.thattommyhall.com/2013/08/23/genetic-programming-in-clojure-with-zippers/ 
;;; 
;;; $$\textbf{meta} $$
;;; 
;;; (meta obj)
;;; 
;;; - Returns the metadata of obj, returns nil if there is no metadata.
;;; 
;;; $$----$$
;; **

;; **
;;; With a zipper implementation for our expressions, we can now easily define a `tree-replace` function, which replaces a part of the tree, specified by its depth-first index, with another given tree. We simply walk the tree to the target index, and then replace the sub-tree with the new tree.
;; **

;; @@
(defn tree-replace
  [tree index new-tree]
  (let [subtree-z (nth (iterate zip/next (expr-zip tree)) index)
        new-zipper (zip/replace subtree-z new-tree)]
    (zip/root new-zipper)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/tree-replace</span>","value":"#'sr-basis/tree-replace"}
;; <=

;; **
;;; An example of it in action:
;; **

;; @@
(tree-replace '(+ 1 (* 3 4 5)) 4 '(+ 1 1))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-long'>3</span>","value":"3"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"}],"value":"(+ 1 1)"},{"type":"html","content":"<span class='clj-long'>5</span>","value":"5"}],"value":"(* 3 (+ 1 1) 5)"}],"value":"(+ 1 (* 3 (+ 1 1) 5))"}
;; <=

;; **
;;; $$ \textbf{MUTATION} $$
;; **

;; **
;;; With that out of the way we're in the position to implement our mutation function. We'll take a function as a parameter that constructs the new tree fragment.
;; **

;; @@
(defn mutate-expr
  [expr new-tree-func]
  (let [size (count-nodes expr)
        target (rand-int size)]
    (tree-replace expr target (new-tree-func))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/mutate-expr</span>","value":"#'sr-basis/mutate-expr"}
;; <=

;; **
;;; And a check that it works. You might want to play with calling the function below a few times.
;; **

;; @@
(mutate-expr '(+ 1 (* 3 4 5)) #(random-full-tree functions terminals 2))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-long'>3</span>","value":"3"},{"type":"html","content":"<span class='clj-long'>4</span>","value":"4"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>pdiv</span>","value":"pdiv"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"},{"type":"html","content":"<span class='clj-symbol'>x</span>","value":"x"}],"value":"(pdiv x x)"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-double'>0.2689998219316053</span>","value":"0.2689998219316053"},{"type":"html","content":"<span class='clj-double'>0.16060039022744266</span>","value":"0.16060039022744266"}],"value":"(* 0.2689998219316053 0.16060039022744266)"}],"value":"(+ (pdiv x x) (* 0.2689998219316053 0.16060039022744266))"}],"value":"(* 3 4 (+ (pdiv x x) (* 0.2689998219316053 0.16060039022744266)))"}],"value":"(+ 1 (* 3 4 (+ (pdiv x x) (* 0.2689998219316053 0.16060039022744266))))"}
;; <=

;; **
;;; $$ \textbf{CROSS OVER} $$
;; **

;; **
;;; The second mechanism for modifying expressions in the genetic algorithm is crossover. This takes two expressions, and returns two new expressions, constructed by picking a random subtree from both expressions and swapping them. We need one more helper, which gets the sub-tree for a given depth first index.
;; **

;; @@
(defn sub-tree
  [tree index]
  (zip/node (nth (iterate zip/next (expr-zip tree)) index)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/sub-tree</span>","value":"#'sr-basis/sub-tree"}
;; <=

;; **
;;; $$---Joel---$$
;;; 
;;; $$\textbf{iterate} $$
;;; 
;;; (iterate f x)
;;; 
;;; - Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects 
;;; 
;;; zip/next is the function 
;;; (expr-zip tree)- produces a zip collection for the tree data which can be 
;;; 
;;; $$\textbf{nth}$$
;;; 
;;; (nth coll index)
;;; 
;;; - Returns the value at the index. get returns nil if index out of
;;; bounds, nth throws an exception unless not-found is supplied.
;;; 
;;; $$----$$
;; **

;; @@
(defn crossover-expr
  [expr1 expr2]
  (let [size1 (count-nodes expr1)
        target1 (rand-int size1)
        size2 (count-nodes expr2)
        target2 (rand-int size2)
        subtree1 (sub-tree expr1 target1)
        subtree2 (sub-tree expr2 target2)]
    [(tree-replace expr1 target1 subtree2) (tree-replace expr2 target2 subtree1)]))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/crossover-expr</span>","value":"#'sr-basis/crossover-expr"}
;; <=

;; **
;;; Again, let's check that it works by playing with some simple expressions.
;; **

;; @@
(crossover-expr '(+ 1 (+ 3 4 5)) '(* :a :b (* :c :d :e)))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-vector'>[</span>","close":"<span class='clj-vector'>]</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-keyword'>:c</span>","value":":c"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"html","content":"<span class='clj-keyword'>:a</span>","value":":a"},{"type":"html","content":"<span class='clj-keyword'>:b</span>","value":":b"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>*</span>","value":"*"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-long'>1</span>","value":"1"},{"type":"list-like","open":"<span class='clj-list'>(</span>","close":"<span class='clj-list'>)</span>","separator":" ","items":[{"type":"html","content":"<span class='clj-symbol'>+</span>","value":"+"},{"type":"html","content":"<span class='clj-long'>3</span>","value":"3"},{"type":"html","content":"<span class='clj-long'>4</span>","value":"4"},{"type":"html","content":"<span class='clj-long'>5</span>","value":"5"}],"value":"(+ 3 4 5)"}],"value":"(+ 1 (+ 3 4 5))"},{"type":"html","content":"<span class='clj-keyword'>:d</span>","value":":d"},{"type":"html","content":"<span class='clj-keyword'>:e</span>","value":":e"}],"value":"(* (+ 1 (+ 3 4 5)) :d :e)"}],"value":"(* :a :b (* (+ 1 (+ 3 4 5)) :d :e))"}],"value":"[:c (* :a :b (* (+ 1 (+ 3 4 5)) :d :e))]"}
;; <=

;; **
;;; ## The genetic algorithm
;;; 
;;; That's all of the groundwork out of the way. We're now ready to implement the genetic algorithm itself. Recall, the idea is we'll take a population of expressions, score them, and then build a new population by cloning, mutating and breeding the better expressions from the old population. A question we need to settle is how to select the better expressions. A simple and effective way to do this (but certainly not the only way) is known as tournament selection. Here we generate each expression in the new population by picking a few expressions from the old population, and then select the best one and copy it, mutate it, or breed it. This technique is nice because it gives us a simple way to balance out keeping the very best expressions, and maintaining a good level of genetic diversity, by adjusting the number of expressions we pick for each tournament (known as the tournament size). At the extremes, if we picked one expression per tournament, then we'd be selecting completely randomly; and if we picked all expressions for the tournament then we'd always select the very best expression.
;;; 
;;; Let's implement a tournament selector. To avoid wasting time scoring the same individuals over and over again, we'll first score every expression in the population, to produce a 'scored population' map.
;; **

;; @@
(defn score-population
  [population score-func]
  (map (fn [expr] {:expr expr :score (score-func expr)}) population))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/score-population</span>","value":"#'sr-basis/score-population"}
;; <=

;; **
;;; And now the tournament selector, which picks an expression from a scored population.
;; **

;; @@
(defn tournament-selector
  [scored-popn tournament-size]
  (let [competitors (repeatedly tournament-size #(rand-nth scored-popn))]
    (:expr (apply max-key :score competitors))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/tournament-selector</span>","value":"#'sr-basis/tournament-selector"}
;; <=

;; **
;;; The final step is to write a function which takes a population, and creates the next generation. We configure this with three integers, the number of clones to make, the number of mutations to make, and the number of crossover pairs to make. For the population to be stable in size we will ensure that `clone-n`, `mutate-n`, and twice `crossover-n` add up to the initial size.
;; **

;; @@
(defn evolve
  [population config]
  (let [{:keys [score-func mutation-new-tree-func tournament-size clone-n mutate-n crossover-n]} config
        scored-popn (score-population population score-func)
        clones (repeatedly clone-n #(tournament-selector scored-popn tournament-size))
        mutations (repeatedly mutate-n 
                              #(mutate-expr 
                                (tournament-selector scored-popn tournament-size)
                                mutation-new-tree-func))
        crossovers (reduce into (repeatedly crossover-n
                               #(crossover-expr
                                 (tournament-selector scored-popn tournament-size)
                                 (tournament-selector scored-popn tournament-size))))]
    (into clones (into mutations crossovers))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/evolve</span>","value":"#'sr-basis/evolve"}
;; <=

;; **
;;; Let's take it for a test drive. We'll use the test data from above. First, we configure the run. We'll use a population size of 100. We'll pick some fairly arbitrary values for the parameters. You could spend a lifetime thinking about how to optimise these, but we won't!
;;; 
;;; We make one performance optimisation here, because it's easy and makes a big difference: we memoize the score function, as the same expression will be scored many times during the run.
;; **

;; @@
(def config {:score-func (memoize #(score-pp data % -0.2))
             :mutation-new-tree-func #(random-full-tree functions terminals 3)
             :tournament-size 5
             :clone-n 40
             :crossover-n 25
             :mutate-n 10})
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/config</span>","value":"#'sr-basis/config"}
;; <=

;; **
;;; Create an initial population.
;; **

;; @@
(def init-pop (repeatedly 100 #(random-full-tree functions terminals 3)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/init-pop</span>","value":"#'sr-basis/init-pop"}
;; <=

;; **
;;; And evolve for a number of generations - for simplicity we just run for a fixed number of generations and then stop. We generate a list of the full population at each generation.
;; **

;; @@
(time (def run-data (doall (take 200 (iterate #(evolve % config) init-pop)))))
;; @@
;; ->
;;; &quot;Elapsed time: 8910.903036 msecs&quot;
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/run-data</span>","value":"#'sr-basis/run-data"}
;; <=

;; **
;;; Let's take a look at the best individual in each generation.
;; **

;; @@
(defn best-in-generation
  [pop score-func]
  (apply max-key :score (score-population pop score-func)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/best-in-generation</span>","value":"#'sr-basis/best-in-generation"}
;; <=

;; @@
(def bests (doall (map #(best-in-generation % (:score-func config)) run-data)))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/bests</span>","value":"#'sr-basis/bests"}
;; <=

;; **
;;; It's interesting to look at how the fitness of the best individual improved through the generations. Here we see that it improves very rapidly for this simple target function.
;; **

;; @@
(plot/list-plot (map :score bests) :joined true)
;; @@
;; =>
;;; {"type":"vega","content":{"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9","field":"data.y"}}],"marks":[{"type":"line","from":{"data":"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}],"data":[{"name":"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9","values":[{"x":0,"y":-267.4711725050661},{"x":1,"y":-337.0646915400741},{"x":2,"y":-140.72399780306225},{"x":3,"y":-140.72399780306225},{"x":4,"y":-56.83563169259451},{"x":5,"y":-56.83563169259451},{"x":6,"y":-51.66865581679769},{"x":7,"y":-51.66865581679769},{"x":8,"y":-51.66865581679769},{"x":9,"y":-45.515423544877535},{"x":10,"y":-45.515423544877535},{"x":11,"y":-45.515423544877535},{"x":12,"y":-45.515423544877535},{"x":13,"y":-45.515423544877535},{"x":14,"y":-45.515423544877535},{"x":15,"y":-45.515423544877535},{"x":16,"y":-45.515423544877535},{"x":17,"y":-45.515423544877535},{"x":18,"y":-44.94968716015936},{"x":19,"y":-44.94968716015936},{"x":20,"y":-44.94968716015936},{"x":21,"y":-33.53526118391664},{"x":22,"y":-33.53526118391664},{"x":23,"y":-33.53526118391664},{"x":24,"y":-33.53526118391664},{"x":25,"y":-33.53526118391664},{"x":26,"y":-33.53526118391664},{"x":27,"y":-22.67695598244956},{"x":28,"y":-19.963734679445732},{"x":29,"y":-19.963734679445732},{"x":30,"y":-17.536146051403733},{"x":31,"y":-17.536146051403733},{"x":32,"y":-17.536146051403733},{"x":33,"y":-17.536146051403733},{"x":34,"y":-17.312520618504898},{"x":35,"y":-17.312520618504898},{"x":36,"y":-17.312520618504898},{"x":37,"y":-15.565196769972108},{"x":38,"y":-14.66508026964856},{"x":39,"y":-14.66508026964856},{"x":40,"y":-14.66508026964856},{"x":41,"y":-14.66508026964856},{"x":42,"y":-13.98227050351881},{"x":43,"y":-13.94736308102592},{"x":44,"y":-13.98227050351881},{"x":45,"y":-13.98227050351881},{"x":46,"y":-13.98227050351881},{"x":47,"y":-13.98227050351881},{"x":48,"y":-13.98227050351881},{"x":49,"y":-13.98227050351881},{"x":50,"y":-13.98227050351881},{"x":51,"y":-13.98227050351881},{"x":52,"y":-13.98227050351881},{"x":53,"y":-13.98227050351881},{"x":54,"y":-13.98227050351881},{"x":55,"y":-13.98227050351881},{"x":56,"y":-13.98227050351881},{"x":57,"y":-13.98227050351881},{"x":58,"y":-13.98227050351881},{"x":59,"y":-13.98227050351881},{"x":60,"y":-13.98227050351881},{"x":61,"y":-13.960698802407157},{"x":62,"y":-13.960698802407157},{"x":63,"y":-13.98227050351881},{"x":64,"y":-13.98227050351881},{"x":65,"y":-13.98227050351881},{"x":66,"y":-13.98227050351881},{"x":67,"y":-13.98227050351881},{"x":68,"y":-13.98227050351881},{"x":69,"y":-13.98227050351881},{"x":70,"y":-13.98227050351881},{"x":71,"y":-13.98227050351881},{"x":72,"y":-13.98227050351881},{"x":73,"y":-13.98227050351881},{"x":74,"y":-13.98227050351881},{"x":75,"y":-13.98227050351881},{"x":76,"y":-13.98227050351881},{"x":77,"y":-13.98227050351881},{"x":78,"y":-13.98227050351881},{"x":79,"y":-13.98227050351881},{"x":80,"y":-13.98227050351881},{"x":81,"y":-13.98227050351881},{"x":82,"y":-13.98227050351881},{"x":83,"y":-13.98227050351881},{"x":84,"y":-13.98227050351881},{"x":85,"y":-13.98227050351881},{"x":86,"y":-13.98227050351881},{"x":87,"y":-13.98227050351881},{"x":88,"y":-13.98227050351881},{"x":89,"y":-13.98227050351881},{"x":90,"y":-13.98227050351881},{"x":91,"y":-13.98227050351881},{"x":92,"y":-13.98227050351881},{"x":93,"y":-13.98227050351881},{"x":94,"y":-13.98227050351881},{"x":95,"y":-13.960698802407157},{"x":96,"y":-13.98227050351881},{"x":97,"y":-13.98227050351881},{"x":98,"y":-13.98227050351881},{"x":99,"y":-13.98227050351881},{"x":100,"y":-13.98227050351881},{"x":101,"y":-13.98227050351881},{"x":102,"y":-13.98227050351881},{"x":103,"y":-13.98227050351881},{"x":104,"y":-13.98227050351881},{"x":105,"y":-13.98227050351881},{"x":106,"y":-13.98227050351881},{"x":107,"y":-13.98227050351881},{"x":108,"y":-13.98227050351881},{"x":109,"y":-13.960698802407157},{"x":110,"y":-13.960698802407157},{"x":111,"y":-13.960698802407157},{"x":112,"y":-13.960698802407157},{"x":113,"y":-13.960698802407157},{"x":114,"y":-13.960698802407157},{"x":115,"y":-13.960698802407157},{"x":116,"y":-13.960698802407157},{"x":117,"y":-13.960698802407157},{"x":118,"y":-13.960698802407157},{"x":119,"y":-13.960698802407157},{"x":120,"y":-13.960698802407157},{"x":121,"y":-13.960698802407157},{"x":122,"y":-13.960698802407157},{"x":123,"y":-13.960698802407157},{"x":124,"y":-13.960698802407157},{"x":125,"y":-13.960698802407157},{"x":126,"y":-13.960698802407157},{"x":127,"y":-13.960698802407157},{"x":128,"y":-13.960698802407157},{"x":129,"y":-13.931279115584172},{"x":130,"y":-13.931279115584172},{"x":131,"y":-13.931279115584172},{"x":132,"y":-13.931279115584172},{"x":133,"y":-13.931279115584172},{"x":134,"y":-13.931279115584172},{"x":135,"y":-13.931279115584172},{"x":136,"y":-13.931279115584172},{"x":137,"y":-13.931279115584172},{"x":138,"y":-13.931279115584172},{"x":139,"y":-13.931279115584172},{"x":140,"y":-13.931279115584172},{"x":141,"y":-13.931279115584172},{"x":142,"y":-13.931279115584172},{"x":143,"y":-13.931279115584172},{"x":144,"y":-13.931279115584172},{"x":145,"y":-11.63658653008566},{"x":146,"y":-11.63658653008566},{"x":147,"y":-11.63658653008566},{"x":148,"y":-11.63658653008566},{"x":149,"y":-11.63658653008566},{"x":150,"y":-11.63658653008566},{"x":151,"y":-11.63658653008566},{"x":152,"y":-11.63658653008566},{"x":153,"y":-11.021186735028966},{"x":154,"y":-11.021186735028966},{"x":155,"y":-11.021186735028966},{"x":156,"y":-11.021186735028966},{"x":157,"y":-11.021186735028966},{"x":158,"y":-11.021186735028966},{"x":159,"y":-11.021186735028966},{"x":160,"y":-10.799037097015095},{"x":161,"y":-10.799037097015095},{"x":162,"y":-10.799037097015095},{"x":163,"y":-10.799037097015095},{"x":164,"y":-10.799037097015095},{"x":165,"y":-10.799037097015095},{"x":166,"y":-10.799037097015095},{"x":167,"y":-10.799037097015095},{"x":168,"y":-10.799037097015095},{"x":169,"y":-10.799037097015095},{"x":170,"y":-10.799037097015095},{"x":171,"y":-10.799037097015095},{"x":172,"y":-10.799037097015095},{"x":173,"y":-10.799037097015095},{"x":174,"y":-10.799037097015095},{"x":175,"y":-10.799037097015095},{"x":176,"y":-10.799037097015095},{"x":177,"y":-10.799037097015095},{"x":178,"y":-10.799037097015095},{"x":179,"y":-10.799037097015095},{"x":180,"y":-10.799037097015095},{"x":181,"y":-10.799037097015095},{"x":182,"y":-10.799037097015095},{"x":183,"y":-10.799037097015095},{"x":184,"y":-10.799037097015095},{"x":185,"y":-10.799037097015095},{"x":186,"y":-10.799037097015095},{"x":187,"y":-10.799037097015095},{"x":188,"y":-10.799037097015095},{"x":189,"y":-10.799037097015095},{"x":190,"y":-10.799037097015095},{"x":191,"y":-10.799037097015095},{"x":192,"y":-10.799037097015095},{"x":193,"y":-10.799037097015095},{"x":194,"y":-10.799037097015095},{"x":195,"y":-10.799037097015095},{"x":196,"y":-10.799037097015095},{"x":197,"y":-10.799037097015095},{"x":198,"y":-10.799037097015095},{"x":199,"y":-10.799037097015095}]}],"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50}},"value":"#gorilla_repl.vega.VegaView{:content {:axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9\", :field \"data.y\"}}], :marks [{:type \"line\", :from {:data \"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}}], :data [{:name \"c679b8e3-fef6-449e-8ee6-f3f63d27f4a9\", :values ({:x 0, :y -267.4711725050661} {:x 1, :y -337.0646915400741} {:x 2, :y -140.72399780306225} {:x 3, :y -140.72399780306225} {:x 4, :y -56.83563169259451} {:x 5, :y -56.83563169259451} {:x 6, :y -51.66865581679769} {:x 7, :y -51.66865581679769} {:x 8, :y -51.66865581679769} {:x 9, :y -45.515423544877535} {:x 10, :y -45.515423544877535} {:x 11, :y -45.515423544877535} {:x 12, :y -45.515423544877535} {:x 13, :y -45.515423544877535} {:x 14, :y -45.515423544877535} {:x 15, :y -45.515423544877535} {:x 16, :y -45.515423544877535} {:x 17, :y -45.515423544877535} {:x 18, :y -44.94968716015936} {:x 19, :y -44.94968716015936} {:x 20, :y -44.94968716015936} {:x 21, :y -33.53526118391664} {:x 22, :y -33.53526118391664} {:x 23, :y -33.53526118391664} {:x 24, :y -33.53526118391664} {:x 25, :y -33.53526118391664} {:x 26, :y -33.53526118391664} {:x 27, :y -22.67695598244956} {:x 28, :y -19.963734679445732} {:x 29, :y -19.963734679445732} {:x 30, :y -17.536146051403733} {:x 31, :y -17.536146051403733} {:x 32, :y -17.536146051403733} {:x 33, :y -17.536146051403733} {:x 34, :y -17.312520618504898} {:x 35, :y -17.312520618504898} {:x 36, :y -17.312520618504898} {:x 37, :y -15.565196769972108} {:x 38, :y -14.66508026964856} {:x 39, :y -14.66508026964856} {:x 40, :y -14.66508026964856} {:x 41, :y -14.66508026964856} {:x 42, :y -13.98227050351881} {:x 43, :y -13.94736308102592} {:x 44, :y -13.98227050351881} {:x 45, :y -13.98227050351881} {:x 46, :y -13.98227050351881} {:x 47, :y -13.98227050351881} {:x 48, :y -13.98227050351881} {:x 49, :y -13.98227050351881} {:x 50, :y -13.98227050351881} {:x 51, :y -13.98227050351881} {:x 52, :y -13.98227050351881} {:x 53, :y -13.98227050351881} {:x 54, :y -13.98227050351881} {:x 55, :y -13.98227050351881} {:x 56, :y -13.98227050351881} {:x 57, :y -13.98227050351881} {:x 58, :y -13.98227050351881} {:x 59, :y -13.98227050351881} {:x 60, :y -13.98227050351881} {:x 61, :y -13.960698802407157} {:x 62, :y -13.960698802407157} {:x 63, :y -13.98227050351881} {:x 64, :y -13.98227050351881} {:x 65, :y -13.98227050351881} {:x 66, :y -13.98227050351881} {:x 67, :y -13.98227050351881} {:x 68, :y -13.98227050351881} {:x 69, :y -13.98227050351881} {:x 70, :y -13.98227050351881} {:x 71, :y -13.98227050351881} {:x 72, :y -13.98227050351881} {:x 73, :y -13.98227050351881} {:x 74, :y -13.98227050351881} {:x 75, :y -13.98227050351881} {:x 76, :y -13.98227050351881} {:x 77, :y -13.98227050351881} {:x 78, :y -13.98227050351881} {:x 79, :y -13.98227050351881} {:x 80, :y -13.98227050351881} {:x 81, :y -13.98227050351881} {:x 82, :y -13.98227050351881} {:x 83, :y -13.98227050351881} {:x 84, :y -13.98227050351881} {:x 85, :y -13.98227050351881} {:x 86, :y -13.98227050351881} {:x 87, :y -13.98227050351881} {:x 88, :y -13.98227050351881} {:x 89, :y -13.98227050351881} {:x 90, :y -13.98227050351881} {:x 91, :y -13.98227050351881} {:x 92, :y -13.98227050351881} {:x 93, :y -13.98227050351881} {:x 94, :y -13.98227050351881} {:x 95, :y -13.960698802407157} {:x 96, :y -13.98227050351881} {:x 97, :y -13.98227050351881} {:x 98, :y -13.98227050351881} {:x 99, :y -13.98227050351881} {:x 100, :y -13.98227050351881} {:x 101, :y -13.98227050351881} {:x 102, :y -13.98227050351881} {:x 103, :y -13.98227050351881} {:x 104, :y -13.98227050351881} {:x 105, :y -13.98227050351881} {:x 106, :y -13.98227050351881} {:x 107, :y -13.98227050351881} {:x 108, :y -13.98227050351881} {:x 109, :y -13.960698802407157} {:x 110, :y -13.960698802407157} {:x 111, :y -13.960698802407157} {:x 112, :y -13.960698802407157} {:x 113, :y -13.960698802407157} {:x 114, :y -13.960698802407157} {:x 115, :y -13.960698802407157} {:x 116, :y -13.960698802407157} {:x 117, :y -13.960698802407157} {:x 118, :y -13.960698802407157} {:x 119, :y -13.960698802407157} {:x 120, :y -13.960698802407157} {:x 121, :y -13.960698802407157} {:x 122, :y -13.960698802407157} {:x 123, :y -13.960698802407157} {:x 124, :y -13.960698802407157} {:x 125, :y -13.960698802407157} {:x 126, :y -13.960698802407157} {:x 127, :y -13.960698802407157} {:x 128, :y -13.960698802407157} {:x 129, :y -13.931279115584172} {:x 130, :y -13.931279115584172} {:x 131, :y -13.931279115584172} {:x 132, :y -13.931279115584172} {:x 133, :y -13.931279115584172} {:x 134, :y -13.931279115584172} {:x 135, :y -13.931279115584172} {:x 136, :y -13.931279115584172} {:x 137, :y -13.931279115584172} {:x 138, :y -13.931279115584172} {:x 139, :y -13.931279115584172} {:x 140, :y -13.931279115584172} {:x 141, :y -13.931279115584172} {:x 142, :y -13.931279115584172} {:x 143, :y -13.931279115584172} {:x 144, :y -13.931279115584172} {:x 145, :y -11.63658653008566} {:x 146, :y -11.63658653008566} {:x 147, :y -11.63658653008566} {:x 148, :y -11.63658653008566} {:x 149, :y -11.63658653008566} {:x 150, :y -11.63658653008566} {:x 151, :y -11.63658653008566} {:x 152, :y -11.63658653008566} {:x 153, :y -11.021186735028966} {:x 154, :y -11.021186735028966} {:x 155, :y -11.021186735028966} {:x 156, :y -11.021186735028966} {:x 157, :y -11.021186735028966} {:x 158, :y -11.021186735028966} {:x 159, :y -11.021186735028966} {:x 160, :y -10.799037097015095} {:x 161, :y -10.799037097015095} {:x 162, :y -10.799037097015095} {:x 163, :y -10.799037097015095} {:x 164, :y -10.799037097015095} {:x 165, :y -10.799037097015095} {:x 166, :y -10.799037097015095} {:x 167, :y -10.799037097015095} {:x 168, :y -10.799037097015095} {:x 169, :y -10.799037097015095} {:x 170, :y -10.799037097015095} {:x 171, :y -10.799037097015095} {:x 172, :y -10.799037097015095} {:x 173, :y -10.799037097015095} {:x 174, :y -10.799037097015095} {:x 175, :y -10.799037097015095} {:x 176, :y -10.799037097015095} {:x 177, :y -10.799037097015095} {:x 178, :y -10.799037097015095} {:x 179, :y -10.799037097015095} {:x 180, :y -10.799037097015095} {:x 181, :y -10.799037097015095} {:x 182, :y -10.799037097015095} {:x 183, :y -10.799037097015095} {:x 184, :y -10.799037097015095} {:x 185, :y -10.799037097015095} {:x 186, :y -10.799037097015095} {:x 187, :y -10.799037097015095} {:x 188, :y -10.799037097015095} {:x 189, :y -10.799037097015095} {:x 190, :y -10.799037097015095} {:x 191, :y -10.799037097015095} {:x 192, :y -10.799037097015095} {:x 193, :y -10.799037097015095} {:x 194, :y -10.799037097015095} {:x 195, :y -10.799037097015095} {:x 196, :y -10.799037097015095} {:x 197, :y -10.799037097015095} {:x 198, :y -10.799037097015095} {:x 199, :y -10.799037097015095})}], :width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}}}"}
;; <=

;; **
;;; And how does the best individual of the last generation look?
;; **

;; @@
(plot/compose
 (plot/list-plot data)
 (plot/plot (functionalise (:expr (last bests))) [0 10]))
;; @@
;; =>
;;; {"type":"vega","content":{"width":400,"height":247.2187957763672,"padding":{"bottom":20,"top":10,"right":10,"left":50},"scales":[{"name":"x","type":"linear","range":"width","zero":false,"domain":{"data":"1e26361f-6f5d-45ad-aa73-60eb7defdfe2","field":"data.x"}},{"name":"y","type":"linear","range":"height","nice":true,"zero":false,"domain":{"data":"1e26361f-6f5d-45ad-aa73-60eb7defdfe2","field":"data.y"}}],"axes":[{"type":"x","scale":"x"},{"type":"y","scale":"y"}],"data":[{"name":"1e26361f-6f5d-45ad-aa73-60eb7defdfe2","values":[{"x":0,"y":0},{"x":0.5,"y":2.0},{"x":1.0,"y":5.0},{"x":1.5,"y":9.0},{"x":2.0,"y":14.0},{"x":2.5,"y":20.0},{"x":3.0,"y":27.0},{"x":3.5,"y":35.0},{"x":4.0,"y":44.0},{"x":4.5,"y":54.0},{"x":5.0,"y":65.0},{"x":5.5,"y":77.0},{"x":6.0,"y":90.0},{"x":6.5,"y":104.0},{"x":7.0,"y":119.0},{"x":7.5,"y":135.0},{"x":8.0,"y":152.0},{"x":8.5,"y":170.0},{"x":9.0,"y":189.0},{"x":9.5,"y":209.0}]},{"name":"f6b81f45-cfc0-4fa0-ab83-19d757bff488","values":[{"x":0,"y":0.9601283867917801},{"x":0.10000000149011612,"y":1.2585360900122056},{"x":0.20000000298023224,"y":1.5972624428769586},{"x":0.30000000447034836,"y":1.976307445386039},{"x":0.4000000059604645,"y":2.3956710975394473},{"x":0.5000000074505806,"y":2.855353399337183},{"x":0.6000000089406967,"y":3.355354350779246},{"x":0.7000000104308128,"y":3.895673951865636},{"x":0.800000011920929,"y":4.476312202596353},{"x":0.9000000134110451,"y":5.097269102971399},{"x":1.0000000149011612,"y":5.758544652990771},{"x":1.1000000163912773,"y":6.460138852654472},{"x":1.2000000178813934,"y":7.2020517019625},{"x":1.3000000193715096,"y":7.984283200914856},{"x":1.4000000208616257,"y":8.806833349511537},{"x":1.5000000223517418,"y":9.669702147752549},{"x":1.600000023841858,"y":10.572889595637886},{"x":1.700000025331974,"y":11.516395693167551},{"x":1.8000000268220901,"y":12.500220440341543},{"x":1.9000000283122063,"y":13.524363837159866},{"x":2.0000000298023224,"y":14.588825883622512},{"x":2.1000000312924385,"y":15.693606579729487},{"x":2.2000000327825546,"y":16.838705925480788},{"x":2.3000000342726707,"y":18.024123920876416},{"x":2.400000035762787,"y":19.24986056591638},{"x":2.500000037252903,"y":20.51591586060066},{"x":2.600000038743019,"y":21.822289804929273},{"x":2.7000000402331352,"y":23.168982398902216},{"x":2.8000000417232513,"y":24.55599364251948},{"x":2.9000000432133675,"y":25.98332353578108},{"x":3.0000000447034836,"y":27.450972078687002},{"x":3.1000000461935997,"y":28.958939271237245},{"x":3.200000047683716,"y":30.507225113431826},{"x":3.300000049173832,"y":32.09582960527073},{"x":3.400000050663948,"y":33.72475274675396},{"x":3.500000052154064,"y":35.39399453788151},{"x":3.6000000536441803,"y":37.103554978653406},{"x":3.7000000551342964,"y":38.85343406906962},{"x":3.8000000566244125,"y":40.643631809130156},{"x":3.9000000581145287,"y":42.47414819883503},{"x":4.000000059604645,"y":44.34498323818423},{"x":4.100000061094761,"y":46.25613692717775},{"x":4.200000062584877,"y":48.207609265815606},{"x":4.300000064074993,"y":50.19940025409778},{"x":4.400000065565109,"y":52.231509892024285},{"x":4.500000067055225,"y":54.30393817959513},{"x":4.6000000685453415,"y":56.41668511681028},{"x":4.700000070035458,"y":58.56975070366978},{"x":4.800000071525574,"y":60.76313494017359},{"x":4.90000007301569,"y":62.99683782632173},{"x":5.000000074505806,"y":65.2708593621142},{"x":5.100000075995922,"y":67.585199547551},{"x":5.200000077486038,"y":69.93985838263214},{"x":5.300000078976154,"y":72.3348358673576},{"x":5.4000000804662704,"y":74.77013200172736},{"x":5.500000081956387,"y":77.24574678574146},{"x":5.600000083446503,"y":79.76168021939992},{"x":5.700000084936619,"y":82.3179323027027},{"x":5.800000086426735,"y":84.91450303564977},{"x":5.900000087916851,"y":87.55139241824119},{"x":6.000000089406967,"y":90.22860045047692},{"x":6.100000090897083,"y":92.94612713235699},{"x":6.200000092387199,"y":95.7039724638814},{"x":6.3000000938773155,"y":98.50213644505016},{"x":6.400000095367432,"y":101.3406190758632},{"x":6.500000096857548,"y":104.21942035632057},{"x":6.600000098347664,"y":107.13854028642228},{"x":6.70000009983778,"y":110.09797886616833},{"x":6.800000101327896,"y":113.09773609555872},{"x":6.900000102818012,"y":116.1378119745934},{"x":7.000000104308128,"y":119.21820650327241},{"x":7.1000001057982445,"y":122.33891968159575},{"x":7.200000107288361,"y":125.49995150956345},{"x":7.300000108778477,"y":128.70130198717544},{"x":7.400000110268593,"y":131.94297111443177},{"x":7.500000111758709,"y":135.22495889133242},{"x":7.600000113248825,"y":138.54726531787742},{"x":7.700000114738941,"y":141.90989039406674},{"x":7.800000116229057,"y":145.31283411990037},{"x":7.900000117719173,"y":148.75609649537833},{"x":8.00000011920929,"y":152.23967752050063},{"x":8.100000120699406,"y":155.76357719526726},{"x":8.200000122189522,"y":159.3277955196782},{"x":8.300000123679638,"y":162.93233249373347},{"x":8.400000125169754,"y":166.57718811743308},{"x":8.50000012665987,"y":170.26236239077704},{"x":8.600000128149986,"y":173.9878553137653},{"x":8.700000129640102,"y":177.75366688639787},{"x":8.800000131130219,"y":181.5597971086748},{"x":8.900000132620335,"y":185.40624598059605},{"x":9.00000013411045,"y":189.2930135021616},{"x":9.100000135600567,"y":193.22009967337152},{"x":9.200000137090683,"y":197.18750449422572},{"x":9.300000138580799,"y":201.19522796472427},{"x":9.400000140070915,"y":205.24327008486713},{"x":9.500000141561031,"y":209.33163085465435},{"x":9.600000143051147,"y":213.4603102740859},{"x":9.700000144541264,"y":217.62930834316177},{"x":9.80000014603138,"y":221.83862506188197},{"x":9.900000147521496,"y":226.08826043024652}]}],"marks":[{"type":"symbol","from":{"data":"1e26361f-6f5d-45ad-aa73-60eb7defdfe2"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"fill":{"value":"steelblue"},"fillOpacity":{"value":1}},"update":{"shape":"circle","size":{"value":70},"stroke":{"value":"transparent"}},"hover":{"size":{"value":210},"stroke":{"value":"white"}}}},{"type":"line","from":{"data":"f6b81f45-cfc0-4fa0-ab83-19d757bff488"},"properties":{"enter":{"x":{"field":"data.x","scale":"x"},"y":{"field":"data.y","scale":"y"},"stroke":{"value":"#FF29D2"},"strokeWidth":{"value":2},"strokeOpacity":{"value":1}}}}]},"value":"#gorilla_repl.vega.VegaView{:content {:width 400, :height 247.2188, :padding {:bottom 20, :top 10, :right 10, :left 50}, :scales [{:name \"x\", :type \"linear\", :range \"width\", :zero false, :domain {:data \"1e26361f-6f5d-45ad-aa73-60eb7defdfe2\", :field \"data.x\"}} {:name \"y\", :type \"linear\", :range \"height\", :nice true, :zero false, :domain {:data \"1e26361f-6f5d-45ad-aa73-60eb7defdfe2\", :field \"data.y\"}}], :axes [{:type \"x\", :scale \"x\"} {:type \"y\", :scale \"y\"}], :data ({:name \"1e26361f-6f5d-45ad-aa73-60eb7defdfe2\", :values ({:x 0, :y 0} {:x 0.5, :y 2.0} {:x 1.0, :y 5.0} {:x 1.5, :y 9.0} {:x 2.0, :y 14.0} {:x 2.5, :y 20.0} {:x 3.0, :y 27.0} {:x 3.5, :y 35.0} {:x 4.0, :y 44.0} {:x 4.5, :y 54.0} {:x 5.0, :y 65.0} {:x 5.5, :y 77.0} {:x 6.0, :y 90.0} {:x 6.5, :y 104.0} {:x 7.0, :y 119.0} {:x 7.5, :y 135.0} {:x 8.0, :y 152.0} {:x 8.5, :y 170.0} {:x 9.0, :y 189.0} {:x 9.5, :y 209.0})} {:name \"f6b81f45-cfc0-4fa0-ab83-19d757bff488\", :values ({:x 0, :y 0.9601283867917801} {:x 0.10000000149011612, :y 1.2585360900122056} {:x 0.20000000298023224, :y 1.5972624428769586} {:x 0.30000000447034836, :y 1.976307445386039} {:x 0.4000000059604645, :y 2.3956710975394473} {:x 0.5000000074505806, :y 2.855353399337183} {:x 0.6000000089406967, :y 3.355354350779246} {:x 0.7000000104308128, :y 3.895673951865636} {:x 0.800000011920929, :y 4.476312202596353} {:x 0.9000000134110451, :y 5.097269102971399} {:x 1.0000000149011612, :y 5.758544652990771} {:x 1.1000000163912773, :y 6.460138852654472} {:x 1.2000000178813934, :y 7.2020517019625} {:x 1.3000000193715096, :y 7.984283200914856} {:x 1.4000000208616257, :y 8.806833349511537} {:x 1.5000000223517418, :y 9.669702147752549} {:x 1.600000023841858, :y 10.572889595637886} {:x 1.700000025331974, :y 11.516395693167551} {:x 1.8000000268220901, :y 12.500220440341543} {:x 1.9000000283122063, :y 13.524363837159866} {:x 2.0000000298023224, :y 14.588825883622512} {:x 2.1000000312924385, :y 15.693606579729487} {:x 2.2000000327825546, :y 16.838705925480788} {:x 2.3000000342726707, :y 18.024123920876416} {:x 2.400000035762787, :y 19.24986056591638} {:x 2.500000037252903, :y 20.51591586060066} {:x 2.600000038743019, :y 21.822289804929273} {:x 2.7000000402331352, :y 23.168982398902216} {:x 2.8000000417232513, :y 24.55599364251948} {:x 2.9000000432133675, :y 25.98332353578108} {:x 3.0000000447034836, :y 27.450972078687002} {:x 3.1000000461935997, :y 28.958939271237245} {:x 3.200000047683716, :y 30.507225113431826} {:x 3.300000049173832, :y 32.09582960527073} {:x 3.400000050663948, :y 33.72475274675396} {:x 3.500000052154064, :y 35.39399453788151} {:x 3.6000000536441803, :y 37.103554978653406} {:x 3.7000000551342964, :y 38.85343406906962} {:x 3.8000000566244125, :y 40.643631809130156} {:x 3.9000000581145287, :y 42.47414819883503} {:x 4.000000059604645, :y 44.34498323818423} {:x 4.100000061094761, :y 46.25613692717775} {:x 4.200000062584877, :y 48.207609265815606} {:x 4.300000064074993, :y 50.19940025409778} {:x 4.400000065565109, :y 52.231509892024285} {:x 4.500000067055225, :y 54.30393817959513} {:x 4.6000000685453415, :y 56.41668511681028} {:x 4.700000070035458, :y 58.56975070366978} {:x 4.800000071525574, :y 60.76313494017359} {:x 4.90000007301569, :y 62.99683782632173} {:x 5.000000074505806, :y 65.2708593621142} {:x 5.100000075995922, :y 67.585199547551} {:x 5.200000077486038, :y 69.93985838263214} {:x 5.300000078976154, :y 72.3348358673576} {:x 5.4000000804662704, :y 74.77013200172736} {:x 5.500000081956387, :y 77.24574678574146} {:x 5.600000083446503, :y 79.76168021939992} {:x 5.700000084936619, :y 82.3179323027027} {:x 5.800000086426735, :y 84.91450303564977} {:x 5.900000087916851, :y 87.55139241824119} {:x 6.000000089406967, :y 90.22860045047692} {:x 6.100000090897083, :y 92.94612713235699} {:x 6.200000092387199, :y 95.7039724638814} {:x 6.3000000938773155, :y 98.50213644505016} {:x 6.400000095367432, :y 101.3406190758632} {:x 6.500000096857548, :y 104.21942035632057} {:x 6.600000098347664, :y 107.13854028642228} {:x 6.70000009983778, :y 110.09797886616833} {:x 6.800000101327896, :y 113.09773609555872} {:x 6.900000102818012, :y 116.1378119745934} {:x 7.000000104308128, :y 119.21820650327241} {:x 7.1000001057982445, :y 122.33891968159575} {:x 7.200000107288361, :y 125.49995150956345} {:x 7.300000108778477, :y 128.70130198717544} {:x 7.400000110268593, :y 131.94297111443177} {:x 7.500000111758709, :y 135.22495889133242} {:x 7.600000113248825, :y 138.54726531787742} {:x 7.700000114738941, :y 141.90989039406674} {:x 7.800000116229057, :y 145.31283411990037} {:x 7.900000117719173, :y 148.75609649537833} {:x 8.00000011920929, :y 152.23967752050063} {:x 8.100000120699406, :y 155.76357719526726} {:x 8.200000122189522, :y 159.3277955196782} {:x 8.300000123679638, :y 162.93233249373347} {:x 8.400000125169754, :y 166.57718811743308} {:x 8.50000012665987, :y 170.26236239077704} {:x 8.600000128149986, :y 173.9878553137653} {:x 8.700000129640102, :y 177.75366688639787} {:x 8.800000131130219, :y 181.5597971086748} {:x 8.900000132620335, :y 185.40624598059605} {:x 9.00000013411045, :y 189.2930135021616} {:x 9.100000135600567, :y 193.22009967337152} {:x 9.200000137090683, :y 197.18750449422572} {:x 9.300000138580799, :y 201.19522796472427} {:x 9.400000140070915, :y 205.24327008486713} {:x 9.500000141561031, :y 209.33163085465435} {:x 9.600000143051147, :y 213.4603102740859} {:x 9.700000144541264, :y 217.62930834316177} {:x 9.80000014603138, :y 221.83862506188197} {:x 9.900000147521496, :y 226.08826043024652})}), :marks ({:type \"symbol\", :from {:data \"1e26361f-6f5d-45ad-aa73-60eb7defdfe2\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :fill {:value \"steelblue\"}, :fillOpacity {:value 1}}, :update {:shape \"circle\", :size {:value 70}, :stroke {:value \"transparent\"}}, :hover {:size {:value 210}, :stroke {:value \"white\"}}}} {:type \"line\", :from {:data \"f6b81f45-cfc0-4fa0-ab83-19d757bff488\"}, :properties {:enter {:x {:field \"data.x\", :scale \"x\"}, :y {:field \"data.y\", :scale \"y\"}, :stroke {:value \"#FF29D2\"}, :strokeWidth {:value 2}, :strokeOpacity {:value 1}}}})}}"}
;; <=

;; **
;;; Pretty good! If we look at it, we see (with a bit of thinking) that it's found exactly the right function, in a slightly unorthodox form.
;; **

;; @@
(pprint/pprint (:expr (last bests)))
;; @@
;; ->
;;; (pdiv
;;;  (+
;;;   (+ x 0.6901232680138459)
;;;   (* (+ x 0.6901232680138459) 0.7927268066305424))
;;;  (pdiv 0.8892792173709061 (+ x 0.6901232680138459)))
;;; 
;; <-
;; =>
;;; {"type":"html","content":"<span class='clj-nil'>nil</span>","value":"nil"}
;; <=

;; **
;;; It's interesting to take a look at the composition of the population as the run procedes.
;; **

;; @@
(defn sample-pop [n gen] (repeatedly n #(rand-nth (nth run-data gen))))
;; @@
;; =>
;;; {"type":"html","content":"<span class='clj-var'>#&#x27;sr-basis/sample-pop</span>","value":"#'sr-basis/sample-pop"}
;; <=

;; **
;;; At the start, we have the random expressions we're used to.
;; **

;; @@
(map render/mathematician-view (sample-pop 5 0))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"latex","content":"\\frac{0.287 \\cdot 0.377 }{ (0.386 - x)} \\cdot 0.034 \\cdot 0.094 \\cdot (x - x)","value":"#sr_basics.render.ExprLatexView{:expr (* (pdiv (* 0.28680761973827873 0.3765290229376782) (- 0.3864560575702626 x)) (* (* 0.03395902534327688 0.09411592855136364) (- x x)))}"},{"type":"latex","content":"\\frac{((x - x) + (x + x)) }{ ((x - 0.322) + \\frac{0.669 }{ 0.476})}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (- x x) (+ x x)) (+ (- x 0.322246581618055) (pdiv 0.6693691513547972 0.475888638110453)))}"},{"type":"latex","content":"(((x - x) - (x + 0.707)) + ((x + 0.031) - \\frac{0.359 }{ x}))","value":"#sr_basics.render.ExprLatexView{:expr (+ (- (- x x) (+ x 0.7073234949936736)) (- (+ x 0.030579383800139137) (pdiv 0.3588687078655055 x)))}"},{"type":"latex","content":"(((x - x) + (0.211 + x)) - \\frac{\\frac{x }{ x} }{ \\frac{0.467 }{ 0.401}})","value":"#sr_basics.render.ExprLatexView{:expr (- (+ (- x x) (+ 0.2113929648132602 x)) (pdiv (pdiv x x) (pdiv 0.46678998927361925 0.4012314067964662)))}"},{"type":"latex","content":"((\\frac{0.057 }{ 0.074} + (0.091 - 0.174)) + 0.608 \\cdot 0.794 \\cdot (0.006 + 0.360))","value":"#sr_basics.render.ExprLatexView{:expr (+ (+ (pdiv 0.056732772506331686 0.07431626393063218) (- 0.09109962581066366 0.1742016380672481)) (* (* 0.6083505216374703 0.7935745497226986) (+ 0.006484974668926058 0.35996074017252366)))}"}],"value":"(#sr_basics.render.ExprLatexView{:expr (* (pdiv (* 0.28680761973827873 0.3765290229376782) (- 0.3864560575702626 x)) (* (* 0.03395902534327688 0.09411592855136364) (- x x)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (- x x) (+ x x)) (+ (- x 0.322246581618055) (pdiv 0.6693691513547972 0.475888638110453)))} #sr_basics.render.ExprLatexView{:expr (+ (- (- x x) (+ x 0.7073234949936736)) (- (+ x 0.030579383800139137) (pdiv 0.3588687078655055 x)))} #sr_basics.render.ExprLatexView{:expr (- (+ (- x x) (+ 0.2113929648132602 x)) (pdiv (pdiv x x) (pdiv 0.46678998927361925 0.4012314067964662)))} #sr_basics.render.ExprLatexView{:expr (+ (+ (pdiv 0.056732772506331686 0.07431626393063218) (- 0.09109962581066366 0.1742016380672481)) (* (* 0.6083505216374703 0.7935745497226986) (+ 0.006484974668926058 0.35996074017252366)))})"}
;; <=

;; **
;;; By generation three we're starting to see the recurrence of useful bits of expression like @@x+x@@ and @@x \cdot x@@.
;; **

;; @@
(map render/mathematician-view (sample-pop 5 3))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"latex","content":"\\frac{((x + 0.690) + x \\cdot 0.793) }{ \\frac{(x - 0.431) }{ x \\cdot x}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv (- x 0.4312423825140843) (* x x)))}"},{"type":"latex","content":"0.690","value":"#sr_basics.render.ExprLatexView{:expr 0.6901232680138459}"},{"type":"latex","content":"(\\frac{0.798 }{ 0.128} \\cdot (x + x) + (x \\cdot (\\frac{x }{ x} \\cdot (x + 0.496) - 0.336 \\cdot 0.214 \\cdot (0.406 + 0.545)) - 0.596 \\cdot 0.177))","value":"#sr_basics.render.ExprLatexView{:expr (+ (* (pdiv 0.7981079603641793 0.12775991991908853) (+ x x)) (- (* x (- (* (pdiv x x) (+ x 0.4958226395291301)) (* (* 0.33631086208928473 0.21361634462609302) (+ 0.406307770257594 0.5453138571091183)))) (* 0.5961106509401287 0.1767273489975042)))}"},{"type":"latex","content":"((x \\cdot x - x) - \\frac{(\\frac{0.413 }{ x} - 0.176) }{ (0.711 + 0.566)})","value":"#sr_basics.render.ExprLatexView{:expr (- (- (* x x) x) (pdiv (- (pdiv 0.41321990547400655 x) 0.17605357263709898) (+ 0.7113776861916371 0.566281464025571)))}"},{"type":"latex","content":"\\frac{((x + 0.690) + x \\cdot ((x + 0.690) + x \\cdot 0.793)) }{ \\frac{(x - 0.431) }{ ((x \\cdot x - x) - \\frac{(0.988 - 0.176) }{ (0.711 + 0.566)})}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)))) (pdiv (- x 0.4312423825140843) (- (- (* x x) x) (pdiv (- 0.9879539662773178 0.17605357263709898) (+ 0.7113776861916371 0.566281464025571)))))}"}],"value":"(#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv (- x 0.4312423825140843) (* x x)))} #sr_basics.render.ExprLatexView{:expr 0.6901232680138459} #sr_basics.render.ExprLatexView{:expr (+ (* (pdiv 0.7981079603641793 0.12775991991908853) (+ x x)) (- (* x (- (* (pdiv x x) (+ x 0.4958226395291301)) (* (* 0.33631086208928473 0.21361634462609302) (+ 0.406307770257594 0.5453138571091183)))) (* 0.5961106509401287 0.1767273489975042)))} #sr_basics.render.ExprLatexView{:expr (- (- (* x x) x) (pdiv (- (pdiv 0.41321990547400655 x) 0.17605357263709898) (+ 0.7113776861916371 0.566281464025571)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)))) (pdiv (- x 0.4312423825140843) (- (- (* x x) x) (pdiv (- 0.9879539662773178 0.17605357263709898) (+ 0.7113776861916371 0.566281464025571)))))})"}
;; <=

;; **
;;; And by generation ten, the expressions are really in good shape. On this run we got the "constants" exactly right by using sums of @@x@@'s but on some runs you'll see the algorithm constructing approximate constants from all manner of odd combinations of things. Just depends on luck! 
;; **

;; @@
(map render/mathematician-view (sample-pop 5 10))
;; @@
;; =>
;;; {"type":"list-like","open":"<span class='clj-lazy-seq'>(</span>","close":"<span class='clj-lazy-seq'>)</span>","separator":" ","items":[{"type":"latex","content":"\\frac{((x + 0.690) + x \\cdot 0.793) }{ \\frac{0.889 }{ (x + 0.690)}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ x 0.6901232680138459)))}"},{"type":"latex","content":"\\frac{((x + 0.690) + x \\cdot 0.793) }{ \\frac{0.889 }{ (0.690 + 0.690)}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ 0.6901232680138459 0.6901232680138459)))}"},{"type":"latex","content":"\\frac{((x + 0.690) + x \\cdot 0.793) }{ \\frac{0.889 }{ (x + 0.690)}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ x 0.6901232680138459)))}"},{"type":"latex","content":"\\frac{(((x + 0.690) + 0.690) + (x + 0.690)) }{ \\frac{(x - 0.431) }{ x \\cdot 0.793}}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ (+ x 0.6901232680138459) 0.6901232680138459) (+ x 0.6901232680138459)) (pdiv (- x 0.4312423825140843) (* x 0.7927268066305424)))}"},{"type":"latex","content":"\\frac{((x + 0.690) + (x + 0.690) \\cdot 0.793) }{ x}","value":"#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* (+ x 0.6901232680138459) 0.7927268066305424)) x)}"}],"value":"(#sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ x 0.6901232680138459)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ 0.6901232680138459 0.6901232680138459)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* x 0.7927268066305424)) (pdiv 0.8892792173709061 (+ x 0.6901232680138459)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ (+ x 0.6901232680138459) 0.6901232680138459) (+ x 0.6901232680138459)) (pdiv (- x 0.4312423825140843) (* x 0.7927268066305424)))} #sr_basics.render.ExprLatexView{:expr (pdiv (+ (+ x 0.6901232680138459) (* (+ x 0.6901232680138459) 0.7927268066305424)) x)})"}
;; <=

;; **
;;; Anyway, there's a lot more we could look at here, but I'd suggest at this point that you run a copy of this worksheet yourself and have a play around :-)
;; **

;; @@

;; @@
